{
  "openapi": "3.0.1",
  "info": {
    "title": "Account and Transaction API",
    "description": "Account and Transaction API for Open Banking Connector Web App",
    "version": "12.2.3"
  },
  "paths": {
    "/aisp/account-access-consent-auth-contexts": {
      "post": {
        "tags": [
          "Account Access Consent Auth Contexts"
        ],
        "summary": "Create account access consent auth context (time-sensitive auth session) and return auth URL",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountAccessConsentAuthContext"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextCreateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/account-access-consent-auth-contexts/{accountAccessConsentAuthContextId}": {
      "get": {
        "tags": [
          "Account Access Consent Auth Contexts"
        ],
        "summary": "Read account access consent auth context",
        "parameters": [
          {
            "name": "accountAccessConsentAuthContextId",
            "in": "path",
            "description": "ID of AccountAccessConsent AuthContext",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextReadResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextReadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextReadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/account-access-consents": {
      "post": {
        "tags": [
          "Account Access Consents"
        ],
        "summary": "Create account access consent",
        "parameters": [
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountAccessConsentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/account-access-consents/{accountAccessConsentId}": {
      "get": {
        "tags": [
          "Account Access Consents"
        ],
        "summary": "Read account access consent",
        "parameters": [
          {
            "name": "accountAccessConsentId",
            "in": "path",
            "description": "ID of AccountAccessConsent",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-exclude-external-api-operation",
            "in": "header",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account Access Consents"
        ],
        "summary": "Delete account access consent",
        "parameters": [
          {
            "name": "accountAccessConsentId",
            "in": "path",
            "description": "ID of AccountAccessConsent",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-exclude-external-api-operation",
            "in": "header",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Read accounts",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Read accounts",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Read balances",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Read balances",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/direct-debits": {
      "get": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Read direct debits",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/direct-debits": {
      "get": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Read direct debits",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/monzo-pots": {
      "get": {
        "tags": [
          "Monzo Pots"
        ],
        "summary": "Read Monzo pots",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MonzoPotsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonzoPotsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonzoPotsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/party": {
      "get": {
        "tags": [
          "Parties"
        ],
        "summary": "Read party",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/party": {
      "get": {
        "tags": [
          "Parties"
        ],
        "summary": "Read party",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/parties": {
      "get": {
        "tags": [
          "Parties"
        ],
        "summary": "Read parties",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parties2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parties2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parties2Response"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/standing-orders": {
      "get": {
        "tags": [
          "Standing Orders"
        ],
        "summary": "Read standing orders",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/standing-orders": {
      "get": {
        "tags": [
          "Standing Orders"
        ],
        "summary": "Read standing orders",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Read transactions",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fromBookingDateTime",
            "in": "query",
            "description": "Start date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toBookingDateTime",
            "in": "query",
            "description": "End date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Read transactions",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fromBookingDateTime",
            "in": "query",
            "description": "Start date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toBookingDateTime",
            "in": "query",
            "description": "End date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/statements/{externalApiStatementId}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Read transactions",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalApiStatementId",
            "in": "path",
            "description": "External (bank) API ID of Statement",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fromBookingDateTime",
            "in": "query",
            "description": "Start date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toBookingDateTime",
            "in": "query",
            "description": "End date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Provides the details to identify an account."
      },
      "Account3": {
        "required": [
          "Id",
          "Related"
        ],
        "type": "object",
        "properties": {
          "Related": {
            "type": "string",
            "description": "Absolute URI to the related resource.",
            "format": "uri"
          },
          "Id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification as assigned by the ASPSP to uniquely identify the related resource."
          }
        },
        "additionalProperties": { }
      },
      "AccountAccessConsentAuthContext": {
        "required": [
          "AccountAccessConsentId"
        ],
        "type": "object",
        "properties": {
          "AccountAccessConsentId": {
            "type": "string",
            "format": "uuid"
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountAccessConsentAuthContextCreateResponse": {
        "required": [
          "AccountAccessConsentId",
          "AppSessionId",
          "AuthUrl",
          "Created",
          "Id",
          "State"
        ],
        "type": "object",
        "properties": {
          "AuthUrl": {
            "type": "string",
            "description": "Time-sensitive URL to enable end-user authentication via website or mobile app",
            "nullable": true
          },
          "AppSessionId": {
            "type": "string",
            "description": "App session ID that can be checked when processing post-auth redirect",
            "nullable": true
          },
          "AccountAccessConsentId": {
            "type": "string",
            "format": "uuid"
          },
          "State": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Unique Open Banking Connector ID (used in local database).",
            "format": "uuid"
          },
          "Created": {
            "type": "string",
            "description": "Created timestamp in local database.",
            "format": "date-time"
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to create requests."
      },
      "AccountAccessConsentAuthContextReadResponse": {
        "required": [
          "AccountAccessConsentId",
          "Created",
          "Id",
          "State"
        ],
        "type": "object",
        "properties": {
          "AccountAccessConsentId": {
            "type": "string",
            "format": "uuid"
          },
          "State": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Unique Open Banking Connector ID (used in local database).",
            "format": "uuid"
          },
          "Created": {
            "type": "string",
            "description": "Created timestamp in local database.",
            "format": "date-time"
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Read requests."
      },
      "AccountAccessConsentCreateResponse": {
        "required": [
          "AuthContextModified",
          "BankRegistrationId",
          "Created",
          "ExternalApiId",
          "ExternalApiResponse",
          "ExternalApiResponseInfo",
          "Id"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadConsentResponse1"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "ExternalApiUserId": {
            "type": "string",
            "description": "User ID at external API (bank) which may or may not be available via ID token \"sub\" claim. If retrieved from ID\r\ntoken or supplied on object creation, it will be stored here.",
            "nullable": true
          },
          "AuthContextModified": {
            "type": "string",
            "format": "date-time"
          },
          "AuthContextModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "BankRegistrationId": {
            "type": "string",
            "description": "ID of associated BankRegistration object",
            "format": "uuid"
          },
          "ExternalApiId": {
            "type": "string",
            "description": "External (bank) API ID. This should be unique between objects created at the\r\nsame bank but we do not assume global uniqueness between objects created at multiple banks.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Unique Open Banking Connector ID (used in local database).",
            "format": "uuid"
          },
          "Created": {
            "type": "string",
            "description": "Created timestamp in local database.",
            "format": "date-time"
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to AccountAccessConsent Create and Read requests."
      },
      "AccountAccessConsentRequest": {
        "required": [
          "BankRegistrationId"
        ],
        "type": "object",
        "properties": {
          "TemplateRequest": {
            "$ref": "#/components/schemas/AccountAccessConsentTemplateRequest"
          },
          "ExternalApiRequest": {
            "$ref": "#/components/schemas/OBReadConsent1"
          },
          "BankRegistrationId": {
            "type": "string",
            "description": "Specifies BankRegistration object to use when creating the consent.",
            "format": "uuid"
          },
          "ExternalApiObject": {
            "$ref": "#/components/schemas/ExternalApiConsent"
          },
          "ExternalApiUserId": {
            "type": "string",
            "description": "User ID at external API (bank) which may or may not be available via ID token \"sub\" claim. It can also optionally\r\nbe specified here.",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request object used to create an AccountAccessConsent. Includes a UK Open Banking request object\r\nplus information on the bank registration and bank functional API to use for the consent."
      },
      "AccountAccessConsentTemplateParameters": {
        "type": "object",
        "additionalProperties": false
      },
      "AccountAccessConsentTemplateRequest": {
        "required": [
          "Type"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/AccountAccessConsentTemplateType"
          },
          "Parameters": {
            "$ref": "#/components/schemas/AccountAccessConsentTemplateParameters"
          }
        },
        "additionalProperties": false
      },
      "AccountAccessConsentTemplateType": {
        "enum": [
          "MaximumPermissions"
        ],
        "type": "string"
      },
      "AccountsResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadAccount6"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Account read requests"
      },
      "Address": {
        "required": [
          "Country"
        ],
        "type": "object",
        "properties": {
          "AddressType": {
            "$ref": "#/components/schemas/OBAddressTypeCode"
          },
          "AddressLine": {
            "maxItems": 5,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "StreetName": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "BuildingNumber": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "PostCode": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "TownName": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "CountrySubDivision": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Country": {
            "pattern": "^[A-Z]{2,2}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "Postal address of a party."
      },
      "Amount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { }
      },
      "Amount3": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          },
          "SubType": {
            "$ref": "#/components/schemas/Amount3SubType"
          }
        },
        "additionalProperties": { }
      },
      "Amount3SubType": {
        "enum": [
          "BaseCurrency",
          "LocalCurrency"
        ],
        "type": "string"
      },
      "Amount5": {
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string",
            "nullable": true
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "AuthContextRequest": {
        "required": [
          "Nonce",
          "State"
        ],
        "type": "object",
        "properties": {
          "State": {
            "type": "string",
            "description": "OAuth2 \"state\".",
            "nullable": true
          },
          "Nonce": {
            "type": "string",
            "description": "OpenID Connect \"nonce\".",
            "nullable": true
          },
          "CodeVerifier": {
            "type": "string",
            "nullable": true
          },
          "ModifiedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Balance": {
        "required": [
          "AccountId",
          "Amount",
          "CreditDebitIndicator",
          "DateTime",
          "Type"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "CreditDebitIndicator": {
            "$ref": "#/components/schemas/OBCreditDebitCode_2"
          },
          "Type": {
            "$ref": "#/components/schemas/OBBalanceType1Code"
          },
          "DateTime": {
            "type": "string",
            "description": "Indicates the date (and time) of the balance.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "Amount": {
            "$ref": "#/components/schemas/Amount3"
          },
          "CreditLine": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditLine"
            },
            "nullable": true
          },
          "LocalAmount": {
            "$ref": "#/components/schemas/LocalAmount2"
          }
        },
        "additionalProperties": { },
        "description": "Set of elements used to define the balance details."
      },
      "BalancesResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadBalance1"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Balance read requests"
      },
      "BaseResponse": {
        "type": "object",
        "properties": {
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreditLine": {
        "required": [
          "Included"
        ],
        "type": "object",
        "properties": {
          "Included": {
            "type": "boolean",
            "description": "Indicates whether or not the credit line is included in the balance of the account.\r\n\r\nUsage: If not present, credit line is not included in the balance amount of the account."
          },
          "Type": {
            "$ref": "#/components/schemas/CreditLineType"
          },
          "Amount": {
            "$ref": "#/components/schemas/Amount5"
          }
        },
        "additionalProperties": { },
        "description": "Set of elements used to provide details on the credit line."
      },
      "CreditLineType": {
        "enum": [
          "Available",
          "Credit",
          "Emergency",
          "Pre-Agreed",
          "Temporary"
        ],
        "type": "string"
      },
      "Data": {
        "type": "object",
        "properties": {
          "Account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBAccount6"
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Data12": {
        "type": "object",
        "properties": {
          "StandingOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBStandingOrder6"
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Data2": {
        "required": [
          "Balance"
        ],
        "type": "object",
        "properties": {
          "Balance": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Balance"
            }
          },
          "TotalValue": {
            "$ref": "#/components/schemas/TotalValue2"
          }
        },
        "additionalProperties": { }
      },
      "Data4": {
        "required": [
          "Permissions"
        ],
        "type": "object",
        "properties": {
          "Permissions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permissions"
            }
          },
          "ExpirationDateTime": {
            "type": "string",
            "description": "Specified date and time the permissions will expire.\r\n\r\nIf this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "TransactionFromDateTime": {
            "type": "string",
            "description": "Specified start date and time for the transaction query period.\r\n\r\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "TransactionToDateTime": {
            "type": "string",
            "description": "Specified end date and time for the transaction query period.\r\n\r\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        },
        "additionalProperties": { }
      },
      "Data5": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "Permissions",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification as assigned to identify the account access consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "Status": {
            "$ref": "#/components/schemas/Data5Status"
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "Permissions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permissions2"
            }
          },
          "ExpirationDateTime": {
            "type": "string",
            "description": "Specified date and time the permissions will expire.\r\n\r\nIf this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "TransactionFromDateTime": {
            "type": "string",
            "description": "Specified start date and time for the transaction query period.\r\n\r\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "TransactionToDateTime": {
            "type": "string",
            "description": "Specified end date and time for the transaction query period.\r\n\r\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Data5Status": {
        "enum": [
          "Authorised",
          "AwaitingAuthorisation",
          "Rejected",
          "Revoked"
        ],
        "type": "string"
      },
      "Data6": {
        "type": "object",
        "properties": {
          "DirectDebit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectDebit"
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Data8": {
        "type": "object",
        "properties": {
          "Party": {
            "$ref": "#/components/schemas/OBParty2"
          }
        },
        "additionalProperties": { }
      },
      "Data9": {
        "type": "object",
        "properties": {
          "Party": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBParty2"
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "DirectDebit": {
        "required": [
          "AccountId",
          "MandateIdentification",
          "Name"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "DirectDebitId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "MandateIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "DirectDebitStatusCode": {
            "$ref": "#/components/schemas/OBExternalDirectDebitStatus1Code"
          },
          "Name": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string"
          },
          "PreviousPaymentDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Frequency": {
            "type": "string",
            "description": "Regularity with which direct debit instructions are to be created and processed.",
            "nullable": true
          },
          "PreviousPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_0"
          }
        },
        "additionalProperties": { },
        "description": "Account to or from which a cash entry is made."
      },
      "DirectDebitsResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadDirectDebit2"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Direct Debit read requests"
      },
      "ExternalApiConsent": {
        "type": "object",
        "properties": {
          "ExternalApiId": {
            "type": "string",
            "description": "External (bank) API ID, i.e. ID of object at bank. This should be unique between objects created at the\r\nsame bank but we do not assume global uniqueness between objects created at multiple banks.",
            "nullable": true
          },
          "AuthContext": {
            "$ref": "#/components/schemas/AuthContextRequest"
          }
        },
        "additionalProperties": false
      },
      "ExternalApiResponseInfo": {
        "required": [
          "XFapiInteractionId"
        ],
        "type": "object",
        "properties": {
          "XFapiInteractionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstructedAmount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { }
      },
      "Links": {
        "required": [
          "Self"
        ],
        "type": "object",
        "properties": {
          "Self": {
            "type": "string",
            "format": "uri"
          },
          "First": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Prev": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Next": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Last": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Links relevant to the payload"
      },
      "LocalAmount2": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          },
          "SubType": {
            "$ref": "#/components/schemas/LocalAmount2SubType"
          }
        },
        "additionalProperties": { }
      },
      "LocalAmount2SubType": {
        "enum": [
          "BaseCurrency",
          "LocalCurrency"
        ],
        "type": "string"
      },
      "Meta": {
        "type": "object",
        "properties": {
          "TotalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "FirstAvailableDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastAvailableDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Meta Data relevant to the payload"
      },
      "MonzoPot": {
        "type": "object",
        "properties": {
          "PotId": {
            "type": "string",
            "nullable": true
          },
          "AccountId": {
            "type": "string",
            "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to\r\nthe account owner.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "CreditDebitIndicator": {
            "$ref": "#/components/schemas/OBCreditDebitCode_2"
          },
          "Balance": {
            "$ref": "#/components/schemas/Amount3"
          },
          "Style": {
            "type": "string",
            "nullable": true
          },
          "Goal": {
            "$ref": "#/components/schemas/Amount3"
          },
          "Updated": {
            "type": "string",
            "format": "date-time"
          },
          "Created": {
            "type": "string",
            "description": "Indicates the date (and time) of the balance.All dates in the JSON payloads are represented in ISO 8601 date-time\r\nformat.\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MonzoPotData": {
        "type": "object",
        "properties": {
          "Pot": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonzoPot"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MonzoPotsResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/ReadMonzoPot"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Monzo pot read requests"
      },
      "OBAccount6": {
        "required": [
          "AccountId"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "Status": {
            "$ref": "#/components/schemas/OBAccountStatus1Code"
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "nullable": true
          },
          "AccountType": {
            "$ref": "#/components/schemas/OBExternalAccountType1Code"
          },
          "AccountSubType": {
            "$ref": "#/components/schemas/OBExternalAccountSubType1Code"
          },
          "Description": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Nickname": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "OpeningDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "MaturityDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "SwitchStatus": {
            "type": "string",
            "nullable": true
          },
          "Account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            },
            "nullable": true
          },
          "Servicer": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification5_0"
          }
        },
        "additionalProperties": false,
        "description": "Unambiguous identification of the account to which credit and debit entries are made. The following fields are optional only for accounts that are switched:\r\n\r\n\r\n  * Data.Currency  \r\n\r\n  * Data.AccountType  \r\n\r\n  * Data.AccountSubType\r\n\r\n\r\nFor all other accounts, the fields must be populated by the ASPSP."
      },
      "OBAccountStatus1Code": {
        "enum": [
          "Deleted",
          "Disabled",
          "Enabled",
          "Pending",
          "ProForma"
        ],
        "type": "string",
        "description": "Specifies the status of account resource in code form."
      },
      "OBActiveOrHistoricCurrencyAndAmount_0": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "The amount of the most recent direct debit collection."
      },
      "OBActiveOrHistoricCurrencyAndAmount_10": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "Transaction charges to be paid by the charge bearer."
      },
      "OBActiveOrHistoricCurrencyAndAmount_11": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "The amount of the last (most recent) Standing Order instruction."
      },
      "OBActiveOrHistoricCurrencyAndAmount_2": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "The amount of the first Standing Order"
      },
      "OBActiveOrHistoricCurrencyAndAmount_3": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "The amount of the next Standing Order."
      },
      "OBActiveOrHistoricCurrencyAndAmount_4": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "The amount of the final Standing Order"
      },
      "OBActiveOrHistoricCurrencyAndAmount_9": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "Amount of money in the cash transaction entry."
      },
      "OBAddressTypeCode": {
        "enum": [
          "Business",
          "Correspondence",
          "DeliveryTo",
          "MailTo",
          "POBox",
          "Postal",
          "Residential",
          "Statement"
        ],
        "type": "string",
        "description": "Identifies the nature of the postal address."
      },
      "OBBalanceType1Code": {
        "enum": [
          "ClosingAvailable",
          "ClosingBooked",
          "ClosingCleared",
          "Expected",
          "ForwardAvailable",
          "Information",
          "InterimAvailable",
          "InterimBooked",
          "InterimCleared",
          "OpeningAvailable",
          "OpeningBooked",
          "OpeningCleared",
          "PreviouslyClosedBooked"
        ],
        "type": "string",
        "description": "Balance type, in a coded form."
      },
      "OBBankTransactionCodeStructure1": {
        "required": [
          "Code",
          "SubCode"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Specifies the family within a domain."
          },
          "SubCode": {
            "type": "string",
            "description": "Specifies the sub-product family within a specific family."
          }
        },
        "additionalProperties": { },
        "description": "Set of elements used to fully identify the type of underlying transaction resulting in an entry."
      },
      "OBBranchAndFinancialInstitutionIdentification5_0": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account."
      },
      "OBBranchAndFinancialInstitutionIdentification5_1": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.\r\n\r\nThis is the servicer of the beneficiary account."
      },
      "OBBranchAndFinancialInstitutionIdentification6_1": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "Identification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress6"
          }
        },
        "additionalProperties": { },
        "description": "Financial institution servicing an account for the creditor."
      },
      "OBBranchAndFinancialInstitutionIdentification6_2": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "Identification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress6"
          }
        },
        "additionalProperties": { },
        "description": "Financial institution servicing an account for the debtor."
      },
      "OBCashAccount5_1": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Beneficiary account identification."
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Provides the details to identify the beneficiary account."
      },
      "OBCashAccount6_0": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Unambiguous identification of the account of the creditor, in the case of a debit transaction."
      },
      "OBCashAccount6_1": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Unambiguous identification of the account of the debtor, in the case of a crebit transaction."
      },
      "OBCreditDebitCode_1": {
        "enum": [
          "Credit",
          "Debit"
        ],
        "type": "string",
        "description": "Indicates whether the transaction is a credit or a debit entry."
      },
      "OBCreditDebitCode_2": {
        "enum": [
          "Credit",
          "Debit"
        ],
        "type": "string",
        "description": "Indicates whether the balance is a credit or a debit balance. \r\n\r\nUsage: A zero balance is considered to be a credit balance."
      },
      "OBCurrencyExchange5": {
        "required": [
          "SourceCurrency"
        ],
        "type": "object",
        "properties": {
          "SourceCurrency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "description": "Currency from which an amount is to be converted in a currency conversion."
          },
          "TargetCurrency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "description": "Currency into which an amount is to be converted in a currency conversion.",
            "nullable": true
          },
          "UnitCurrency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "description": "Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.",
            "nullable": true
          },
          "ExchangeRate": {
            "type": "number",
            "description": "Factor used to convert an amount from one currency into another. This reflects the price at which one currency was bought with another currency.\r\n\r\nUsage: ExchangeRate expresses the ratio between UnitCurrency and QuotedCurrency (ExchangeRate = UnitCurrency/QuotedCurrency).",
            "format": "double",
            "nullable": true
          },
          "ContractIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification to unambiguously identify the foreign exchange contract.",
            "nullable": true
          },
          "QuotationDate": {
            "type": "string",
            "description": "Date and time at which an exchange rate is quoted.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/InstructedAmount"
          }
        },
        "additionalProperties": { },
        "description": "Set of elements used to provide details on the currency exchange."
      },
      "OBEntryStatus1Code": {
        "enum": [
          "Booked",
          "Pending",
          "Rejected"
        ],
        "type": "string",
        "description": "Status of a transaction entry on the books of the account servicer."
      },
      "OBExternalAccountSubType1Code": {
        "enum": [
          "ChargeCard",
          "CreditCard",
          "CurrentAccount",
          "EMoney",
          "Loan",
          "Mortgage",
          "PrePaidCard",
          "Savings"
        ],
        "type": "string",
        "description": "Specifies the sub type of account (product family group)."
      },
      "OBExternalAccountType1Code": {
        "enum": [
          "Business",
          "Personal"
        ],
        "type": "string",
        "description": "Specifies the type of account (personal or business)."
      },
      "OBExternalDirectDebitStatus1Code": {
        "enum": [
          "Active",
          "Inactive"
        ],
        "type": "string",
        "description": "Specifies the status of the direct debit in code form."
      },
      "OBExternalPartyType1Code": {
        "enum": [
          "Delegate",
          "Joint",
          "Sole"
        ],
        "type": "string",
        "description": "Party type, in a coded form."
      },
      "OBExternalStandingOrderStatus1Code": {
        "enum": [
          "Active",
          "Inactive"
        ],
        "type": "string",
        "description": "Specifies the status of the standing order in code form."
      },
      "OBMerchantDetails1": {
        "type": "object",
        "properties": {
          "MerchantName": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "description": "Name by which the merchant is known.",
            "nullable": true
          },
          "MerchantCategoryCode": {
            "maxLength": 4,
            "minLength": 3,
            "type": "string",
            "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Details of the merchant involved in the transaction."
      },
      "OBParty2": {
        "required": [
          "PartyId"
        ],
        "type": "object",
        "properties": {
          "PartyId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "PartyNumber": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "PartyType": {
            "$ref": "#/components/schemas/OBExternalPartyType1Code"
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "FullLegalName": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "LegalStructure": {
            "type": "string",
            "nullable": true
          },
          "BeneficialOwnership": {
            "type": "boolean",
            "nullable": true
          },
          "AccountRole": {
            "type": "string",
            "nullable": true
          },
          "EmailAddress": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "pattern": "\\+[0-9]{1,3}-[0-9()+\\-]{1,30}",
            "type": "string",
            "nullable": true
          },
          "Mobile": {
            "pattern": "\\+[0-9]{1,3}-[0-9()+\\-]{1,30}",
            "type": "string",
            "nullable": true
          },
          "Relationships": {
            "$ref": "#/components/schemas/OBPartyRelationships1"
          },
          "Address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OBPartyRelationships1": {
        "type": "object",
        "properties": {
          "Account": {
            "$ref": "#/components/schemas/Account3"
          }
        },
        "additionalProperties": { },
        "description": "The Party's relationships with other resources."
      },
      "OBPostalAddress6": {
        "type": "object",
        "properties": {
          "AddressType": {
            "$ref": "#/components/schemas/OBAddressTypeCode"
          },
          "Department": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "Identification of a division of a large organisation or building.",
            "nullable": true
          },
          "SubDepartment": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "Identification of a sub-division of a large organisation or building.",
            "nullable": true
          },
          "StreetName": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "BuildingNumber": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "PostCode": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "TownName": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "CountrySubDivision": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Identifies a subdivision of a country such as state, region, county.",
            "nullable": true
          },
          "Country": {
            "pattern": "^[A-Z]{2,2}$",
            "type": "string",
            "description": "Nation with its own government.",
            "nullable": true
          },
          "AddressLine": {
            "maxItems": 7,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Information that locates and identifies a specific address, as defined by postal services."
      },
      "OBReadAccount6": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadBalance1": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data2"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadConsent1": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data4"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk2"
          }
        },
        "additionalProperties": false
      },
      "OBReadConsentResponse1": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data5"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk2"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadDataTransaction6": {
        "type": "object",
        "properties": {
          "Transaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBTransaction6"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OBReadDirectDebit2": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data6"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadParty2": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data8"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadParty3": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data9"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadStandingOrder6": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data12"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadTransaction6": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadDataTransaction6"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBRisk2": {
        "type": "object",
        "additionalProperties": false,
        "description": "The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Account Info."
      },
      "OBStandingOrder6": {
        "required": [
          "AccountId",
          "Frequency"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "StandingOrderId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Frequency": {
            "pattern": "^(NotKnown)$|^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$",
            "type": "string"
          },
          "Reference": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "FirstPaymentDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "NextPaymentDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastPaymentDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "FinalPaymentDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "NumberOfPayments": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "StandingOrderStatusCode": {
            "$ref": "#/components/schemas/OBExternalStandingOrderStatus1Code"
          },
          "FirstPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_2"
          },
          "NextPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_3"
          },
          "LastPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_11"
          },
          "FinalPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_4"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification5_1"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccount5_1"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        },
        "additionalProperties": false
      },
      "OBSupplementaryData1": {
        "type": "object",
        "additionalProperties": { },
        "description": "Additional information that can not be captured in the structured fields and/or any other specific block."
      },
      "OBTransaction6": {
        "required": [
          "AccountId",
          "Amount",
          "BookingDateTime",
          "CreditDebitIndicator",
          "Status"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "TransactionId": {
            "maxLength": 210,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "TransactionReference": {
            "maxLength": 210,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "StatementReference": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "CreditDebitIndicator": {
            "$ref": "#/components/schemas/OBCreditDebitCode_1"
          },
          "Status": {
            "$ref": "#/components/schemas/OBEntryStatus1Code"
          },
          "TransactionMutability": {
            "$ref": "#/components/schemas/OBTransactionMutability1Code"
          },
          "BookingDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "ValueDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "TransactionInformation": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "AddressLine": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_9"
          },
          "ChargeAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_10"
          },
          "CurrencyExchange": {
            "$ref": "#/components/schemas/OBCurrencyExchange5"
          },
          "BankTransactionCode": {
            "$ref": "#/components/schemas/OBBankTransactionCodeStructure1"
          },
          "ProprietaryBankTransactionCode": {
            "$ref": "#/components/schemas/ProprietaryBankTransactionCodeStructure1"
          },
          "Balance": {
            "$ref": "#/components/schemas/OBTransactionCashBalance"
          },
          "MerchantDetails": {
            "$ref": "#/components/schemas/OBMerchantDetails1"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6_1"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccount6_0"
          },
          "DebtorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6_2"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/OBCashAccount6_1"
          },
          "CardInstrument": {
            "$ref": "#/components/schemas/OBTransactionCardInstrument1"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        },
        "additionalProperties": false,
        "description": "Provides further details on an entry in the report."
      },
      "OBTransactionCardInstrument1": {
        "type": "object",
        "properties": {
          "CardSchemeName": {
            "$ref": "#/components/schemas/OBTransactionCardInstrument1CardSchemeName"
          },
          "AuthorisationType": {
            "$ref": "#/components/schemas/OBTransactionCardInstrument1AuthorisationType"
          },
          "Name": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "Name of the cardholder using the card instrument.",
            "nullable": true
          },
          "Identification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "description": "Identification assigned by an institution to identify the card instrument used in the transaction. This identification is known by the account owner, and may be masked.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set of elements to describe the card instrument used in the transaction."
      },
      "OBTransactionCardInstrument1AuthorisationType": {
        "enum": [
          "ConsumerDevice",
          "Contactless",
          "None",
          "PIN"
        ],
        "type": "string"
      },
      "OBTransactionCardInstrument1CardSchemeName": {
        "enum": [
          "AmericanExpress",
          "Diners",
          "Discover",
          "MasterCard",
          "VISA"
        ],
        "type": "string"
      },
      "OBTransactionCashBalance": {
        "required": [
          "CreditDebitIndicator",
          "Type"
        ],
        "type": "object",
        "properties": {
          "CreditDebitIndicator": {
            "$ref": "#/components/schemas/OBCreditDebitCode_2"
          },
          "Type": {
            "$ref": "#/components/schemas/OBBalanceType1Code"
          },
          "Amount": {
            "$ref": "#/components/schemas/Amount"
          }
        },
        "additionalProperties": false,
        "description": "Set of elements used to define the balance as a numerical representation of the net increases and decreases in an account after a transaction entry is applied to the account."
      },
      "OBTransactionMutability1Code": {
        "enum": [
          "Mutable",
          "Immutable"
        ],
        "type": "string",
        "description": "Specifies the Mutability of the Transaction record."
      },
      "Parties2Response": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadParty3"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Parties read requests"
      },
      "PartiesResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadParty2"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Party read requests"
      },
      "Permissions": {
        "enum": [
          "ReadAccountsBasic",
          "ReadAccountsDetail",
          "ReadBalances",
          "ReadBeneficiariesBasic",
          "ReadBeneficiariesDetail",
          "ReadDirectDebits",
          "ReadOffers",
          "ReadPAN",
          "ReadParty",
          "ReadPartyPSU",
          "ReadProducts",
          "ReadScheduledPaymentsBasic",
          "ReadScheduledPaymentsDetail",
          "ReadStandingOrdersBasic",
          "ReadStandingOrdersDetail",
          "ReadStatementsBasic",
          "ReadStatementsDetail",
          "ReadTransactionsBasic",
          "ReadTransactionsCredits",
          "ReadTransactionsDebits",
          "ReadTransactionsDetail"
        ],
        "type": "string",
        "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP."
      },
      "Permissions2": {
        "enum": [
          "ReadAccountsBasic",
          "ReadAccountsDetail",
          "ReadBalances",
          "ReadBeneficiariesBasic",
          "ReadBeneficiariesDetail",
          "ReadDirectDebits",
          "ReadOffers",
          "ReadPAN",
          "ReadParty",
          "ReadPartyPSU",
          "ReadProducts",
          "ReadScheduledPaymentsBasic",
          "ReadScheduledPaymentsDetail",
          "ReadStandingOrdersBasic",
          "ReadStandingOrdersDetail",
          "ReadStatementsBasic",
          "ReadStatementsDetail",
          "ReadTransactionsBasic",
          "ReadTransactionsCredits",
          "ReadTransactionsDebits",
          "ReadTransactionsDetail"
        ],
        "type": "string",
        "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP."
      },
      "ProprietaryBankTransactionCodeStructure1": {
        "required": [
          "Code"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Proprietary bank transaction code to identify the underlying transaction."
          },
          "Issuer": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Identification of the issuer of the proprietary bank transaction code.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set of elements to fully identify a proprietary bank transaction code."
      },
      "ReadMonzoPot": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/MonzoPotData"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "StandingOrdersResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadStandingOrder6"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Standing Order read requests"
      },
      "TotalValue2": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { }
      },
      "TransactionsResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadTransaction6"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Transaction read requests"
      }
    }
  }
}