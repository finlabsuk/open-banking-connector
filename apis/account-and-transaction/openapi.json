{
  "openapi": "3.0.1",
  "info": {
    "title": "Account and Transaction API",
    "description": "Account and Transaction API for Open Banking Connector Web App",
    "version": "6.2.0"
  },
  "paths": {
    "/aisp/account-access-consent-auth-contexts": {
      "post": {
        "tags": [
          "Account Access Consent Auth Contexts"
        ],
        "summary": "Create account access consent auth context (time-sensitive auth session) and return auth URL",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountAccessConsentAuthContext"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextCreateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/account-access-consent-auth-contexts/{accountAccessConsentAuthContextId}": {
      "get": {
        "tags": [
          "Account Access Consent Auth Contexts"
        ],
        "summary": "Read account access consent auth context",
        "parameters": [
          {
            "name": "accountAccessConsentAuthContextId",
            "in": "path",
            "description": "ID of AccountAccessConsent AuthContext",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextReadResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextReadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextReadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/account-access-consents": {
      "post": {
        "tags": [
          "Account Access Consents"
        ],
        "summary": "Create account access consent",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountAccessConsentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/account-access-consents/{accountAccessConsentId}": {
      "get": {
        "tags": [
          "Account Access Consents"
        ],
        "summary": "Read account access consent",
        "parameters": [
          {
            "name": "accountAccessConsentId",
            "in": "path",
            "description": "ID of AccountAccessConsent",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-include-external-api-operation",
            "in": "header",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account Access Consents"
        ],
        "summary": "Delete account access consent",
        "parameters": [
          {
            "name": "accountAccessConsentId",
            "in": "path",
            "description": "ID of AccountAccessConsent",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-include-external-api-operation",
            "in": "header",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDeleteResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDeleteResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectDeleteResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Read accounts",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Read accounts",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Read balances",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Read balances",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/direct-debits": {
      "get": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Read direct debits",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/direct-debits": {
      "get": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Read direct debits",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/party": {
      "get": {
        "tags": [
          "Parties"
        ],
        "summary": "Read party",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/party": {
      "get": {
        "tags": [
          "Parties"
        ],
        "summary": "Read party",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/parties": {
      "get": {
        "tags": [
          "Parties"
        ],
        "summary": "Read parties",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parties2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parties2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parties2Response"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/standing-orders": {
      "get": {
        "tags": [
          "Standing Orders"
        ],
        "summary": "Read standing orders",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/standing-orders": {
      "get": {
        "tags": [
          "Standing Orders"
        ],
        "summary": "Read standing orders",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Read transactions",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromBookingDateTime",
            "in": "query",
            "description": "Start date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toBookingDateTime",
            "in": "query",
            "description": "End date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Read transactions",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromBookingDateTime",
            "in": "query",
            "description": "Start date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toBookingDateTime",
            "in": "query",
            "description": "End date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/statements/{externalApiStatementId}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Read transactions",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalApiStatementId",
            "in": "path",
            "description": "External (bank) API ID of Statement",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-modified-by",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromBookingDateTime",
            "in": "query",
            "description": "Start date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toBookingDateTime",
            "in": "query",
            "description": "End date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountAccessConsentAuthContext": {
        "required": [
          "AccountAccessConsentId"
        ],
        "type": "object",
        "properties": {
          "AccountAccessConsentId": {
            "type": "string",
            "format": "uuid"
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountAccessConsentAuthContextCreateResponse": {
        "type": "object",
        "properties": {
          "AuthUrl": {
            "type": "string",
            "description": "Time-sensitive URL to enable end-user authentication via website or mobile app",
            "nullable": true,
            "readOnly": true
          },
          "AppSessionId": {
            "type": "string",
            "description": "App session ID that can be checked when processing post-auth redirect",
            "nullable": true,
            "readOnly": true
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true,
            "readOnly": true
          },
          "AccountAccessConsentId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "State": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Id": {
            "type": "string",
            "description": "Unique Open Banking Connector ID (used in local database).",
            "format": "uuid",
            "readOnly": true
          },
          "Created": {
            "type": "string",
            "description": "Created timestamp in local database.",
            "format": "date-time",
            "readOnly": true
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true,
            "readOnly": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Response to create requests."
      },
      "AccountAccessConsentAuthContextReadResponse": {
        "type": "object",
        "properties": {
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true,
            "readOnly": true
          },
          "AccountAccessConsentId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "State": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Id": {
            "type": "string",
            "description": "Unique Open Banking Connector ID (used in local database).",
            "format": "uuid",
            "readOnly": true
          },
          "Created": {
            "type": "string",
            "description": "Created timestamp in local database.",
            "format": "date-time",
            "readOnly": true
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true,
            "readOnly": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Read requests."
      },
      "AccountAccessConsentCreateResponse": {
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadConsentResponse1"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true,
            "readOnly": true
          },
          "BankRegistrationId": {
            "type": "string",
            "description": "ID of associated BankRegistration object",
            "format": "uuid",
            "readOnly": true
          },
          "ExternalApiId": {
            "type": "string",
            "description": "External (bank) API ID. This should be unique between objects created at the\r\nsame bank but we do not assume global uniqueness between objects created at multiple banks.",
            "nullable": true,
            "readOnly": true
          },
          "ExternalApiUserId": {
            "type": "string",
            "description": "User ID at external API (bank) which may or may not be available via ID token \"sub\" claim. If retrieved from ID\r\ntoken or supplied on object creation, it will be stored here.",
            "nullable": true,
            "readOnly": true
          },
          "AuthContextModified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "AuthContextModifiedBy": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Id": {
            "type": "string",
            "description": "Unique Open Banking Connector ID (used in local database).",
            "format": "uuid",
            "readOnly": true
          },
          "Created": {
            "type": "string",
            "description": "Created timestamp in local database.",
            "format": "date-time",
            "readOnly": true
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true,
            "readOnly": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Response to AccountAccessConsent Create requests."
      },
      "AccountAccessConsentRequest": {
        "required": [
          "BankRegistrationId"
        ],
        "type": "object",
        "properties": {
          "TemplateRequest": {
            "$ref": "#/components/schemas/AccountAccessConsentTemplateRequest"
          },
          "ExternalApiRequest": {
            "$ref": "#/components/schemas/OBReadConsent1"
          },
          "BankRegistrationId": {
            "type": "string",
            "description": "Specifies BankRegistration object to use when creating the consent.",
            "format": "uuid"
          },
          "ExternalApiObject": {
            "$ref": "#/components/schemas/ExternalApiConsent"
          },
          "ExternalApiUserId": {
            "type": "string",
            "description": "User ID at external API (bank) which may or may not be available via ID token \"sub\" claim. It can also optionally\r\nbe specified here.",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request object used to create an AccountAccessConsent. Includes a UK Open Banking request object\r\nplus information on the bank registration and bank functional API to use for the consent."
      },
      "AccountAccessConsentTemplateParameters": {
        "type": "object",
        "additionalProperties": false
      },
      "AccountAccessConsentTemplateRequest": {
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/AccountAccessConsentTemplateType"
          },
          "Parameters": {
            "$ref": "#/components/schemas/AccountAccessConsentTemplateParameters"
          }
        },
        "additionalProperties": false
      },
      "AccountAccessConsentTemplateType": {
        "enum": [
          "MaximumPermissions"
        ],
        "type": "string"
      },
      "AccountsResponse": {
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadAccount6"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Account read requests"
      },
      "AuthContextRequest": {
        "type": "object",
        "properties": {
          "State": {
            "type": "string",
            "description": "OAuth2 \"state\".",
            "nullable": true
          },
          "Nonce": {
            "type": "string",
            "description": "OpenID Connect \"nonce\".",
            "nullable": true
          },
          "ModifiedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BalancesResponse": {
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadBalance1"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Balance read requests"
      },
      "DirectDebitsResponse": {
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadDirectDebit2"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Direct Debit read requests"
      },
      "ExternalApiConsent": {
        "type": "object",
        "properties": {
          "ExternalApiId": {
            "type": "string",
            "description": "External (bank) API ID, i.e. ID of object at bank. This should be unique between objects created at the\r\nsame bank but we do not assume global uniqueness between objects created at multiple banks.",
            "nullable": true
          },
          "AuthContext": {
            "$ref": "#/components/schemas/AuthContextRequest"
          }
        },
        "additionalProperties": false
      },
      "Links": {
        "type": "object",
        "properties": {
          "Self": {
            "type": "string",
            "description": "Gets the self.",
            "nullable": true
          },
          "First": {
            "type": "string",
            "description": "Gets the first.",
            "nullable": true
          },
          "Prev": {
            "type": "string",
            "description": "Gets the prev.",
            "nullable": true
          },
          "Next": {
            "type": "string",
            "description": "Gets the next.",
            "nullable": true
          },
          "Last": {
            "type": "string",
            "description": "Gets the last.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Links relevant to the payload."
      },
      "Meta": {
        "type": "object",
        "properties": {
          "TotalPages": {
            "type": "integer",
            "description": "Gets the total pages.",
            "format": "int32",
            "nullable": true
          },
          "FirstAvailableDateTime": {
            "type": "string",
            "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "LastAvailableDateTime": {
            "type": "string",
            "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Meta Data relevant to the payload."
      },
      "OBAccount6": {
        "type": "object",
        "properties": {
          "AccountId": {
            "type": "string",
            "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
            "nullable": true
          },
          "Status": {
            "$ref": "#/components/schemas/OBAccountStatus1CodeEnum"
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "Identification of the currency in which the account is held. \r\nUsage: Currency should only be used in case one and the same account number covers several currencies\r\nand the initiating party needs to identify which currency needs to be used for settlement on the account.",
            "nullable": true
          },
          "AccountType": {
            "$ref": "#/components/schemas/OBExternalAccountType1CodeEnum"
          },
          "AccountSubType": {
            "$ref": "#/components/schemas/OBExternalAccountSubType1CodeEnum"
          },
          "Description": {
            "type": "string",
            "description": "Specifies the description of the account type.",
            "nullable": true
          },
          "Nickname": {
            "type": "string",
            "description": "The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.",
            "nullable": true
          },
          "OpeningDate": {
            "type": "string",
            "description": "Date on which the account and related basic services are effectively operational for the account owner.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "MaturityDate": {
            "type": "string",
            "description": "Maturity date of the account.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "SwitchStatus": {
            "type": "string",
            "description": "Specifies the switch status for the account, in a coded form.",
            "nullable": true
          },
          "Account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBAccount6AccountItem"
            },
            "description": "Gets the account.",
            "nullable": true
          },
          "Servicer": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification50"
          }
        },
        "additionalProperties": false,
        "description": "Unambiguous identification of the account to which credit and debit entries are made. The following fields are optional only for accounts that are switched:\r\n\r\n  * Data.Currency  \r\n  * Data.AccountType  \r\n  * Data.AccountSubType\r\n\r\nFor all other accounts, the fields must be populated by the ASPSP."
      },
      "OBAccount6AccountItem": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "description": "Name of the identification scheme, in a coded form as published in an external list.",
            "nullable": true
          },
          "Identification": {
            "type": "string",
            "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\r\nNote, the account name is not the product name or the nickname of the account.",
            "nullable": true
          },
          "SecondaryIdentification": {
            "type": "string",
            "description": "This is secondary identification of the account, as assigned by the account servicing institution. \r\nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Provides the details to identify an account."
      },
      "OBAccountStatus1CodeEnum": {
        "enum": [
          "Deleted",
          "Disabled",
          "Enabled",
          "Pending",
          "ProForma"
        ],
        "type": "string",
        "description": "Specifies the status of account resource in code form."
      },
      "OBActiveOrHistoricCurrencyAndAmount0": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "string",
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The amount of the most recent direct debit collection."
      },
      "OBActiveOrHistoricCurrencyAndAmount10": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "string",
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Transaction charges to be paid by the charge bearer."
      },
      "OBActiveOrHistoricCurrencyAndAmount11": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "string",
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The amount of the last (most recent) Standing Order instruction."
      },
      "OBActiveOrHistoricCurrencyAndAmount2": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "string",
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The amount of the first Standing Order."
      },
      "OBActiveOrHistoricCurrencyAndAmount3": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "string",
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The amount of the next Standing Order."
      },
      "OBActiveOrHistoricCurrencyAndAmount4": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "string",
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The amount of the final Standing Order."
      },
      "OBActiveOrHistoricCurrencyAndAmount9": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "string",
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Amount of money in the cash transaction entry."
      },
      "OBAddressTypeCodeEnum": {
        "enum": [
          "Business",
          "Correspondence",
          "DeliveryTo",
          "MailTo",
          "POBox",
          "Postal",
          "Residential",
          "Statement"
        ],
        "type": "string",
        "description": "Identifies the nature of the postal address."
      },
      "OBBalanceType1CodeEnum": {
        "enum": [
          "ClosingAvailable",
          "ClosingBooked",
          "ClosingCleared",
          "Expected",
          "ForwardAvailable",
          "Information",
          "InterimAvailable",
          "InterimBooked",
          "InterimCleared",
          "OpeningAvailable",
          "OpeningBooked",
          "OpeningCleared",
          "PreviouslyClosedBooked"
        ],
        "type": "string",
        "description": "Balance type, in a coded form."
      },
      "OBBankTransactionCodeStructure1": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Specifies the family within a domain.",
            "nullable": true
          },
          "SubCode": {
            "type": "string",
            "description": "Specifies the sub-product family within a specific family.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set of elements used to fully identify the type of underlying transaction resulting in an entry."
      },
      "OBBranchAndFinancialInstitutionIdentification50": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "description": "Name of the identification scheme, in a coded form as published in an external list.",
            "nullable": true
          },
          "Identification": {
            "type": "string",
            "description": "Unique and unambiguous identification of the servicing institution.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account."
      },
      "OBBranchAndFinancialInstitutionIdentification51": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "description": "Name of the identification scheme, in a coded form as published in an external list.",
            "nullable": true
          },
          "Identification": {
            "type": "string",
            "description": "Unique and unambiguous identification of the servicing institution.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.\r\nThis is the servicer of the beneficiary account."
      },
      "OBBranchAndFinancialInstitutionIdentification61": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "description": "Name of the identification scheme, in a coded form as published in an external list.",
            "nullable": true
          },
          "Identification": {
            "type": "string",
            "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name by which an agent is known and which is usually used to identify that agent.",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress6"
          }
        },
        "additionalProperties": false,
        "description": "Financial institution servicing an account for the creditor."
      },
      "OBBranchAndFinancialInstitutionIdentification62": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "description": "Name of the identification scheme, in a coded form as published in an external list.",
            "nullable": true
          },
          "Identification": {
            "type": "string",
            "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name by which an agent is known and which is usually used to identify that agent.",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress6"
          }
        },
        "additionalProperties": false,
        "description": "Financial institution servicing an account for the debtor."
      },
      "OBCashAccount51": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "description": "Name of the identification scheme, in a coded form as published in an external list.",
            "nullable": true
          },
          "Identification": {
            "type": "string",
            "description": "Beneficiary account identification.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\r\nNote, the account name is not the product name or the nickname of the account.",
            "nullable": true
          },
          "SecondaryIdentification": {
            "type": "string",
            "description": "This is secondary identification of the account, as assigned by the account servicing institution. \r\nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Provides the details to identify the beneficiary account."
      },
      "OBCashAccount60": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "description": "Name of the identification scheme, in a coded form as published in an external list.",
            "nullable": true
          },
          "Identification": {
            "type": "string",
            "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\r\nNote, the account name is not the product name or the nickname of the account.",
            "nullable": true
          },
          "SecondaryIdentification": {
            "type": "string",
            "description": "This is secondary identification of the account, as assigned by the account servicing institution. \r\nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unambiguous identification of the account of the creditor, in the case of a debit transaction."
      },
      "OBCashAccount61": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "description": "Name of the identification scheme, in a coded form as published in an external list.",
            "nullable": true
          },
          "Identification": {
            "type": "string",
            "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\r\nNote, the account name is not the product name or the nickname of the account.",
            "nullable": true
          },
          "SecondaryIdentification": {
            "type": "string",
            "description": "This is secondary identification of the account, as assigned by the account servicing institution. \r\nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unambiguous identification of the account of the debtor, in the case of a crebit transaction."
      },
      "OBCreditDebitCode1Enum": {
        "enum": [
          "Credit",
          "Debit"
        ],
        "type": "string",
        "description": "Indicates whether the transaction is a credit or a debit entry."
      },
      "OBCreditDebitCode2Enum": {
        "enum": [
          "Credit",
          "Debit"
        ],
        "type": "string",
        "description": "Indicates whether the balance is a credit or a debit balance. \r\nUsage: A zero balance is considered to be a credit balance."
      },
      "OBCurrencyExchange5": {
        "type": "object",
        "properties": {
          "SourceCurrency": {
            "type": "string",
            "description": "Currency from which an amount is to be converted in a currency conversion.",
            "nullable": true
          },
          "TargetCurrency": {
            "type": "string",
            "description": "Currency into which an amount is to be converted in a currency conversion.",
            "nullable": true
          },
          "UnitCurrency": {
            "type": "string",
            "description": "Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.",
            "nullable": true
          },
          "ExchangeRate": {
            "type": "number",
            "description": "Factor used to convert an amount from one currency into another. This reflects the price at which one currency was bought with another currency.\r\nUsage: ExchangeRate expresses the ratio between UnitCurrency and QuotedCurrency (ExchangeRate = UnitCurrency/QuotedCurrency).",
            "format": "float"
          },
          "ContractIdentification": {
            "type": "string",
            "description": "Unique identification to unambiguously identify the foreign exchange contract.",
            "nullable": true
          },
          "QuotationDate": {
            "type": "string",
            "description": "Date and time at which an exchange rate is quoted.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/OBCurrencyExchange5InstructedAmount"
          }
        },
        "additionalProperties": false,
        "description": "Set of elements used to provide details on the currency exchange."
      },
      "OBCurrencyExchange5InstructedAmount": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "string",
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party."
      },
      "OBEntryStatus1CodeEnum": {
        "enum": [
          "Booked",
          "Pending",
          "Rejected"
        ],
        "type": "string",
        "description": "Status of a transaction entry on the books of the account servicer."
      },
      "OBExternalAccountSubType1CodeEnum": {
        "enum": [
          "ChargeCard",
          "CreditCard",
          "CurrentAccount",
          "EMoney",
          "Loan",
          "Mortgage",
          "PrePaidCard",
          "Savings"
        ],
        "type": "string",
        "description": "Specifies the sub type of account (product family group)."
      },
      "OBExternalAccountType1CodeEnum": {
        "enum": [
          "Business",
          "Personal"
        ],
        "type": "string",
        "description": "Specifies the type of account (personal or business)."
      },
      "OBExternalDirectDebitStatus1CodeEnum": {
        "enum": [
          "Active",
          "Inactive"
        ],
        "type": "string",
        "description": "Specifies the status of the direct debit in code form."
      },
      "OBExternalPartyType1CodeEnum": {
        "enum": [
          "Delegate",
          "Joint",
          "Sole"
        ],
        "type": "string",
        "description": "Party type, in a coded form."
      },
      "OBExternalStandingOrderStatus1CodeEnum": {
        "enum": [
          "Active",
          "Inactive"
        ],
        "type": "string",
        "description": "Specifies the status of the standing order in code form."
      },
      "OBMerchantDetails1": {
        "type": "object",
        "properties": {
          "MerchantName": {
            "type": "string",
            "description": "Name by which the merchant is known.",
            "nullable": true
          },
          "MerchantCategoryCode": {
            "type": "string",
            "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of the merchant involved in the transaction."
      },
      "OBParty2": {
        "type": "object",
        "properties": {
          "PartyId": {
            "type": "string",
            "description": "A unique and immutable identifier used to identify the customer resource. This identifier has no meaning to the account owner.",
            "nullable": true
          },
          "PartyNumber": {
            "type": "string",
            "description": "Number assigned by an agent to identify its customer.",
            "nullable": true
          },
          "PartyType": {
            "$ref": "#/components/schemas/OBExternalPartyType1CodeEnum"
          },
          "Name": {
            "type": "string",
            "description": "Name by which a party is known and which is usually used to identify that party.",
            "nullable": true
          },
          "FullLegalName": {
            "type": "string",
            "description": "Specifies a character string with a maximum length of 350 characters.",
            "nullable": true
          },
          "LegalStructure": {
            "type": "string",
            "description": "Legal standing of the party.",
            "nullable": true
          },
          "BeneficialOwnership": {
            "type": "boolean",
            "description": "Gets the beneficial ownership.",
            "nullable": true
          },
          "AccountRole": {
            "type": "string",
            "description": "A party’s role with respect to the related account.",
            "nullable": true
          },
          "EmailAddress": {
            "type": "string",
            "description": "Address for electronic mail (e-mail).",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "Collection of information that identifies a phone number, as defined by telecom services.",
            "nullable": true
          },
          "Mobile": {
            "type": "string",
            "description": "Collection of information that identifies a mobile phone number, as defined by telecom services.",
            "nullable": true
          },
          "Relationships": {
            "$ref": "#/components/schemas/OBPartyRelationships1"
          },
          "Address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBParty2AddressItem"
            },
            "description": "Gets the address.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The OBParty2."
      },
      "OBParty2AddressItem": {
        "type": "object",
        "properties": {
          "AddressType": {
            "$ref": "#/components/schemas/OBAddressTypeCodeEnum"
          },
          "AddressLine": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets the address line.",
            "nullable": true
          },
          "StreetName": {
            "type": "string",
            "description": "Name of a street or thoroughfare.",
            "nullable": true
          },
          "BuildingNumber": {
            "type": "string",
            "description": "Number that identifies the position of a building on a street.",
            "nullable": true
          },
          "PostCode": {
            "type": "string",
            "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
            "nullable": true
          },
          "TownName": {
            "type": "string",
            "description": "Name of a built-up area, with defined boundaries, and a local government.",
            "nullable": true
          },
          "CountrySubDivision": {
            "type": "string",
            "description": "Identifies a subdivision of a country eg, state, region, county.",
            "nullable": true
          },
          "Country": {
            "type": "string",
            "description": "Nation with its own government, occupying a particular territory.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Postal address of a party."
      },
      "OBPartyRelationships1": {
        "type": "object",
        "properties": {
          "Account": {
            "$ref": "#/components/schemas/OBPartyRelationships1Account"
          }
        },
        "additionalProperties": false,
        "description": "The Party's relationships with other resources."
      },
      "OBPartyRelationships1Account": {
        "type": "object",
        "properties": {
          "Related": {
            "type": "string",
            "description": "Absolute URI to the related resource.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Unique identification as assigned by the ASPSP to uniquely identify the related resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relationship to the Account resource."
      },
      "OBPostalAddress6": {
        "type": "object",
        "properties": {
          "AddressType": {
            "$ref": "#/components/schemas/OBAddressTypeCodeEnum"
          },
          "Department": {
            "type": "string",
            "description": "Identification of a division of a large organisation or building.",
            "nullable": true
          },
          "SubDepartment": {
            "type": "string",
            "description": "Identification of a sub-division of a large organisation or building.",
            "nullable": true
          },
          "StreetName": {
            "type": "string",
            "description": "Name of a street or thoroughfare.",
            "nullable": true
          },
          "BuildingNumber": {
            "type": "string",
            "description": "Number that identifies the position of a building on a street.",
            "nullable": true
          },
          "PostCode": {
            "type": "string",
            "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
            "nullable": true
          },
          "TownName": {
            "type": "string",
            "description": "Name of a built-up area, with defined boundaries, and a local government.",
            "nullable": true
          },
          "CountrySubDivision": {
            "type": "string",
            "description": "Identifies a subdivision of a country such as state, region, county.",
            "nullable": true
          },
          "Country": {
            "type": "string",
            "description": "Nation with its own government.",
            "nullable": true
          },
          "AddressLine": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets the address line.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Information that locates and identifies a specific address, as defined by postal services."
      },
      "OBReadAccount6": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadAccount6Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false,
        "description": "Response object OBReadAccount6 from UK Open Banking Read-Write Account and Transaction API spec\r\nv3.1.11. Open Banking Connector will automatically\r\ntranslate <i>to</i> this from an older format for banks supporting an earlier spec version."
      },
      "OBReadAccount6Data": {
        "type": "object",
        "properties": {
          "Account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBAccount6"
            },
            "description": "Gets the account.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The OBReadAccount6Data."
      },
      "OBReadBalance1": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadBalance1Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false,
        "description": "Response object OBReadBalance1 from UK Open Banking Read-Write Account and Transaction API spec\r\nv3.1.11. Open Banking Connector will automatically\r\ntranslate <i>to</i> this from an older format for banks supporting an earlier spec version."
      },
      "OBReadBalance1Data": {
        "type": "object",
        "properties": {
          "Balance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBReadBalance1DataBalanceItem"
            },
            "description": "Gets the balance.",
            "nullable": true
          },
          "TotalValue": {
            "$ref": "#/components/schemas/OBReadBalance1DataTotalValue"
          }
        },
        "additionalProperties": false,
        "description": "The OBReadBalance1Data."
      },
      "OBReadBalance1DataBalanceAmountSubTypeEnum": {
        "enum": [
          "BaseCurrency",
          "LocalCurrency"
        ],
        "type": "string",
        "description": "The amount in the domestic or base accounting currency. Default is Base Currency (BCUR) if not specified."
      },
      "OBReadBalance1DataBalanceCreditLineTypeEnum": {
        "enum": [
          "Available",
          "Credit",
          "Emergency",
          "Pre-Agreed",
          "Temporary"
        ],
        "type": "string",
        "description": "Limit type, in a coded form."
      },
      "OBReadBalance1DataBalanceItem": {
        "type": "object",
        "properties": {
          "AccountId": {
            "type": "string",
            "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
            "nullable": true
          },
          "CreditDebitIndicator": {
            "$ref": "#/components/schemas/OBCreditDebitCode2Enum"
          },
          "Type": {
            "$ref": "#/components/schemas/OBBalanceType1CodeEnum"
          },
          "DateTime": {
            "type": "string",
            "description": "Indicates the date (and time) of the balance.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBReadBalance1DataBalanceItemAmount"
          },
          "CreditLine": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBReadBalance1DataBalancePropertiesItemsItem"
            },
            "description": "Gets the credit line.",
            "nullable": true
          },
          "LocalAmount": {
            "$ref": "#/components/schemas/OBReadBalance1DataBalanceItemLocalAmount"
          }
        },
        "additionalProperties": false,
        "description": "Set of elements used to define the balance details."
      },
      "OBReadBalance1DataBalanceItemAmount": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "string",
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "nullable": true
          },
          "SubType": {
            "$ref": "#/components/schemas/OBReadBalance1DataBalanceAmountSubTypeEnum"
          }
        },
        "additionalProperties": false,
        "description": "Amount of money of the cash balance."
      },
      "OBReadBalance1DataBalanceItemCreditLineItemAmount": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "string",
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Amount of money of the credit line."
      },
      "OBReadBalance1DataBalanceItemLocalAmount": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "string",
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "nullable": true
          },
          "SubType": {
            "$ref": "#/components/schemas/OBReadBalance1DataBalanceLocalAmountSubTypeEnum"
          }
        },
        "additionalProperties": false,
        "description": "Optional component providing the equivalent of Amount in local currency. Default is Local Currency (LCUR) if not specified."
      },
      "OBReadBalance1DataBalanceLocalAmountSubTypeEnum": {
        "enum": [
          "BaseCurrency",
          "LocalCurrency"
        ],
        "type": "string",
        "description": "The amount in the local market currency for which the asset is held."
      },
      "OBReadBalance1DataBalancePropertiesItemsItem": {
        "type": "object",
        "properties": {
          "Included": {
            "type": "boolean",
            "description": "Indicates whether or not the credit line is included in the balance of the account.\r\nUsage: If not present, credit line is not included in the balance amount of the account."
          },
          "Type": {
            "$ref": "#/components/schemas/OBReadBalance1DataBalanceCreditLineTypeEnum"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBReadBalance1DataBalanceItemCreditLineItemAmount"
          }
        },
        "additionalProperties": false,
        "description": "Set of elements used to provide details on the credit line."
      },
      "OBReadBalance1DataTotalValue": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "string",
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Combined sum of all Amounts in the accounts base currency."
      },
      "OBReadConsent1": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadConsent1Data"
          },
          "Risk": {
            "description": "Any object.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request object OBReadConsent1 from UK Open Banking Read-Write Account and Transaction API spec\r\nv3.1.11. Open Banking Connector will automatically\r\ntranslate <i>from</i> this to an older format for banks supporting an earlier spec version."
      },
      "OBReadConsent1Data": {
        "type": "object",
        "properties": {
          "Permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBReadConsent1DataPermissionsEnum"
            },
            "description": "Gets the permissions.",
            "nullable": true
          },
          "ExpirationDateTime": {
            "type": "string",
            "description": "Specified date and time the permissions will expire.\r\nIf this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "TransactionFromDateTime": {
            "type": "string",
            "description": "Specified start date and time for the transaction query period.\r\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "TransactionToDateTime": {
            "type": "string",
            "description": "Specified end date and time for the transaction query period.\r\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The OBReadConsent1Data."
      },
      "OBReadConsent1DataPermissionsEnum": {
        "enum": [
          "ReadAccountsBasic",
          "ReadAccountsDetail",
          "ReadBalances",
          "ReadBeneficiariesBasic",
          "ReadBeneficiariesDetail",
          "ReadDirectDebits",
          "ReadOffers",
          "ReadPAN",
          "ReadParty",
          "ReadPartyPSU",
          "ReadProducts",
          "ReadScheduledPaymentsBasic",
          "ReadScheduledPaymentsDetail",
          "ReadStandingOrdersBasic",
          "ReadStandingOrdersDetail",
          "ReadStatementsBasic",
          "ReadStatementsDetail",
          "ReadTransactionsBasic",
          "ReadTransactionsCredits",
          "ReadTransactionsDebits",
          "ReadTransactionsDetail"
        ],
        "type": "string",
        "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP."
      },
      "OBReadConsentResponse1": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadConsentResponse1Data"
          },
          "Risk": {
            "description": "Any object.",
            "nullable": true
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false,
        "description": "Response object OBReadConsentResponse1 from UK Open Banking Read-Write Account and Transaction API spec\r\nv3.1.11. Open Banking Connector will automatically\r\ntranslate <i>to</i> this from an older format for banks supporting an earlier spec version."
      },
      "OBReadConsentResponse1Data": {
        "type": "object",
        "properties": {
          "ConsentId": {
            "type": "string",
            "description": "Unique identification as assigned to identify the account access consent resource.",
            "nullable": true
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "Status": {
            "$ref": "#/components/schemas/OBReadConsentResponse1DataStatusEnum"
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "Permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBReadConsentResponse1DataPermissionsEnum"
            },
            "description": "Gets the permissions.",
            "nullable": true
          },
          "ExpirationDateTime": {
            "type": "string",
            "description": "Specified date and time the permissions will expire.\r\nIf this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "TransactionFromDateTime": {
            "type": "string",
            "description": "Specified start date and time for the transaction query period.\r\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "TransactionToDateTime": {
            "type": "string",
            "description": "Specified end date and time for the transaction query period.\r\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The OBReadConsentResponse1Data."
      },
      "OBReadConsentResponse1DataPermissionsEnum": {
        "enum": [
          "ReadAccountsBasic",
          "ReadAccountsDetail",
          "ReadBalances",
          "ReadBeneficiariesBasic",
          "ReadBeneficiariesDetail",
          "ReadDirectDebits",
          "ReadOffers",
          "ReadPAN",
          "ReadParty",
          "ReadPartyPSU",
          "ReadProducts",
          "ReadScheduledPaymentsBasic",
          "ReadScheduledPaymentsDetail",
          "ReadStandingOrdersBasic",
          "ReadStandingOrdersDetail",
          "ReadStatementsBasic",
          "ReadStatementsDetail",
          "ReadTransactionsBasic",
          "ReadTransactionsCredits",
          "ReadTransactionsDebits",
          "ReadTransactionsDetail"
        ],
        "type": "string",
        "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP."
      },
      "OBReadConsentResponse1DataStatusEnum": {
        "enum": [
          "Authorised",
          "AwaitingAuthorisation",
          "Rejected",
          "Revoked"
        ],
        "type": "string",
        "description": "Specifies the status of consent resource in code form."
      },
      "OBReadDataTransaction6": {
        "type": "object",
        "properties": {
          "Transaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBTransaction6"
            },
            "description": "Gets the transaction.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The OBReadDataTransaction6."
      },
      "OBReadDirectDebit2": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadDirectDebit2Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false,
        "description": "The OBReadDirectDebit2."
      },
      "OBReadDirectDebit2Data": {
        "type": "object",
        "properties": {
          "DirectDebit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBReadDirectDebit2DataDirectDebitItem"
            },
            "description": "Gets the direct debit.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The OBReadDirectDebit2Data."
      },
      "OBReadDirectDebit2DataDirectDebitItem": {
        "type": "object",
        "properties": {
          "AccountId": {
            "type": "string",
            "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
            "nullable": true
          },
          "DirectDebitId": {
            "type": "string",
            "description": "A unique and immutable identifier used to identify the direct debit resource. This identifier has no meaning to the account owner.",
            "nullable": true
          },
          "MandateIdentification": {
            "type": "string",
            "description": "Direct Debit reference. For AUDDIS service users provide Core Reference. For non AUDDIS service users provide Core reference if possible or last used reference.",
            "nullable": true
          },
          "DirectDebitStatusCode": {
            "$ref": "#/components/schemas/OBExternalDirectDebitStatus1CodeEnum"
          },
          "Name": {
            "type": "string",
            "description": "Name of Service User.",
            "nullable": true
          },
          "PreviousPaymentDateTime": {
            "type": "string",
            "description": "Date of most recent direct debit collection.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "Frequency": {
            "type": "string",
            "description": "Regularity with which direct debit instructions are to be created and processed.",
            "nullable": true
          },
          "PreviousPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount0"
          }
        },
        "additionalProperties": false,
        "description": "Account to or from which a cash entry is made."
      },
      "OBReadParty2": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadParty2Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false,
        "description": "Response object OBReadParty2 from UK Open Banking Read-Write Account and Transaction API spec\r\nv3.1.11. Open Banking Connector will automatically\r\ntranslate <i>to</i> this from an older format for banks supporting an earlier spec version."
      },
      "OBReadParty2Data": {
        "type": "object",
        "properties": {
          "Party": {
            "$ref": "#/components/schemas/OBParty2"
          }
        },
        "additionalProperties": false,
        "description": "The OBReadParty2Data."
      },
      "OBReadParty3": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadParty3Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false,
        "description": "Response object OBReadParty3 from UK Open Banking Read-Write Account and Transaction API spec\r\nv3.1.11. Open Banking Connector will automatically\r\ntranslate <i>to</i> this from an older format for banks supporting an earlier spec version."
      },
      "OBReadParty3Data": {
        "type": "object",
        "properties": {
          "Party": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBParty2"
            },
            "description": "Gets the party.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The OBReadParty3Data."
      },
      "OBReadStandingOrder6": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadStandingOrder6Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false,
        "description": "The OBReadStandingOrder6."
      },
      "OBReadStandingOrder6Data": {
        "type": "object",
        "properties": {
          "StandingOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBStandingOrder6"
            },
            "description": "Gets the standing order.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The OBReadStandingOrder6Data."
      },
      "OBReadTransaction6": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadDataTransaction6"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false,
        "description": "Response object OBReadTransaction6 from UK Open Banking Read-Write Account and Transaction API spec\r\nv3.1.11. Open Banking Connector will automatically\r\ntranslate <i>to</i> this from an older format for banks supporting an earlier spec version."
      },
      "OBStandingOrder6": {
        "type": "object",
        "properties": {
          "AccountId": {
            "type": "string",
            "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
            "nullable": true
          },
          "StandingOrderId": {
            "type": "string",
            "description": "A unique and immutable identifier used to identify the standing order resource. This identifier has no meaning to the account owner.",
            "nullable": true
          },
          "Frequency": {
            "type": "string",
            "description": "Individual Definitions:\r\nNotKnown - Not Known\r\nEvryDay - Every day\r\nEvryWorkgDay - Every working day\r\nIntrvlDay - An interval specified in number of calendar days (02 to 31)\r\nIntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)\r\nWkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)\r\nIntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-05 to -01, 01 to 31)\r\nQtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)\r\nENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December.\r\nSCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.\r\nRECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December.\r\nIndividual Patterns:\r\nNotKnown (ScheduleCode)\r\nEvryDay (ScheduleCode)\r\nEvryWorkgDay (ScheduleCode)\r\nIntrvlDay:NoOfDay (ScheduleCode + NoOfDay)\r\nIntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)\r\nWkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)\r\nIntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)\r\nQtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay\r\nThe regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:\r\nNotKnown\r\nEvryDay\r\nEvryWorkgDay\r\nIntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1])\r\nIntrvlWkDay:0[1-9]:0[1-7]\r\nWkInMnthDay:0[1-5]:0[1-7]\r\nIntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])\r\nQtrDay:(ENGLISH|SCOTTISH|RECEIVED)\r\nFull Regular Expression:\r\n^(NotKnown)$|^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\r\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\r\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.",
            "nullable": true
          },
          "FirstPaymentDateTime": {
            "type": "string",
            "description": "The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "NextPaymentDateTime": {
            "type": "string",
            "description": "The date on which the next payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "LastPaymentDateTime": {
            "type": "string",
            "description": "The date on which the last (most recent) payment for a Standing Order schedule was made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "FinalPaymentDateTime": {
            "type": "string",
            "description": "The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "NumberOfPayments": {
            "type": "string",
            "description": "Number of the payments that will be made in completing this frequency sequence including any executed since the sequence start date.",
            "nullable": true
          },
          "StandingOrderStatusCode": {
            "$ref": "#/components/schemas/OBExternalStandingOrderStatus1CodeEnum"
          },
          "FirstPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount2"
          },
          "NextPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount3"
          },
          "LastPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount11"
          },
          "FinalPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount4"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification51"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccount51"
          },
          "SupplementaryData": {
            "type": "object",
            "additionalProperties": { },
            "description": "Additional information that can not be captured in the structured fields and/or any other specific block.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The OBStandingOrder6."
      },
      "OBTransaction6": {
        "type": "object",
        "properties": {
          "AccountId": {
            "type": "string",
            "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
            "nullable": true
          },
          "TransactionId": {
            "type": "string",
            "description": "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.",
            "nullable": true
          },
          "TransactionReference": {
            "type": "string",
            "description": "Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.",
            "nullable": true
          },
          "StatementReference": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets the statement reference.",
            "nullable": true
          },
          "CreditDebitIndicator": {
            "$ref": "#/components/schemas/OBCreditDebitCode1Enum"
          },
          "Status": {
            "$ref": "#/components/schemas/OBEntryStatus1CodeEnum"
          },
          "TransactionMutability": {
            "$ref": "#/components/schemas/OBTransactionMutability1CodeEnum"
          },
          "BookingDateTime": {
            "type": "string",
            "description": "Date and time when a transaction entry is posted to an account on the account servicer's books.\r\nUsage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "ValueDateTime": {
            "type": "string",
            "description": "Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry.\r\nUsage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date.\r\nFor transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "TransactionInformation": {
            "type": "string",
            "description": "Further details of the transaction. \r\nThis is the transaction narrative, which is unstructured text.",
            "nullable": true
          },
          "AddressLine": {
            "type": "string",
            "description": "Information that locates and identifies a specific address for a transaction entry, that is presented in free format text.",
            "nullable": true
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount9"
          },
          "ChargeAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount10"
          },
          "CurrencyExchange": {
            "$ref": "#/components/schemas/OBCurrencyExchange5"
          },
          "BankTransactionCode": {
            "$ref": "#/components/schemas/OBBankTransactionCodeStructure1"
          },
          "ProprietaryBankTransactionCode": {
            "$ref": "#/components/schemas/ProprietaryBankTransactionCodeStructure1"
          },
          "Balance": {
            "$ref": "#/components/schemas/OBTransactionCashBalance"
          },
          "MerchantDetails": {
            "$ref": "#/components/schemas/OBMerchantDetails1"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification61"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccount60"
          },
          "DebtorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification62"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/OBCashAccount61"
          },
          "CardInstrument": {
            "$ref": "#/components/schemas/OBTransactionCardInstrument1"
          },
          "SupplementaryData": {
            "type": "object",
            "additionalProperties": { },
            "description": "Additional information that can not be captured in the structured fields and/or any other specific block.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Provides further details on an entry in the report."
      },
      "OBTransactionCardInstrument1": {
        "type": "object",
        "properties": {
          "CardSchemeName": {
            "$ref": "#/components/schemas/OBTransactionCardInstrument1CardSchemeNameEnum"
          },
          "AuthorisationType": {
            "$ref": "#/components/schemas/OBTransactionCardInstrument1AuthorisationTypeEnum"
          },
          "Name": {
            "type": "string",
            "description": "Name of the cardholder using the card instrument.",
            "nullable": true
          },
          "Identification": {
            "type": "string",
            "description": "Identification assigned by an institution to identify the card instrument used in the transaction. This identification is known by the account owner, and may be masked.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set of elements to describe the card instrument used in the transaction."
      },
      "OBTransactionCardInstrument1AuthorisationTypeEnum": {
        "enum": [
          "ConsumerDevice",
          "Contactless",
          "None",
          "PIN"
        ],
        "type": "string",
        "description": "The card authorisation type."
      },
      "OBTransactionCardInstrument1CardSchemeNameEnum": {
        "enum": [
          "AmericanExpress",
          "Diners",
          "Discover",
          "MasterCard",
          "Visa"
        ],
        "type": "string",
        "description": "Name of the card scheme."
      },
      "OBTransactionCashBalance": {
        "type": "object",
        "properties": {
          "CreditDebitIndicator": {
            "$ref": "#/components/schemas/OBCreditDebitCode2Enum"
          },
          "Type": {
            "$ref": "#/components/schemas/OBBalanceType1CodeEnum"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBTransactionCashBalanceAmount"
          }
        },
        "additionalProperties": false,
        "description": "Set of elements used to define the balance as a numerical representation of the net increases and decreases in an account after a transaction entry is applied to the account."
      },
      "OBTransactionCashBalanceAmount": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "string",
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Amount of money of the cash balance after a transaction entry is applied to the account.."
      },
      "OBTransactionMutability1CodeEnum": {
        "enum": [
          "Mutable",
          "Immutable"
        ],
        "type": "string",
        "description": "Specifies the Mutability of the Transaction record."
      },
      "ObjectDeleteResponse": {
        "type": "object",
        "properties": {
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Parties2Response": {
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadParty3"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Parties read requests"
      },
      "PartiesResponse": {
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadParty2"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Party read requests"
      },
      "ProprietaryBankTransactionCodeStructure1": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Proprietary bank transaction code to identify the underlying transaction.",
            "nullable": true
          },
          "Issuer": {
            "type": "string",
            "description": "Identification of the issuer of the proprietary bank transaction code.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set of elements to fully identify a proprietary bank transaction code."
      },
      "StandingOrdersResponse": {
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadStandingOrder6"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Standing Order read requests"
      },
      "TransactionsResponse": {
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadTransaction6"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Transaction read requests"
      }
    }
  }
}