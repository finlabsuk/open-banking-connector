{
  "openapi": "3.0.4",
  "info": {
    "title": "Payment Initiation API",
    "description": "Payment Initiation API for Open Banking Connector Web App",
    "version": "13.0.0"
  },
  "paths": {
    "/pisp/domestic-payment-consent-auth-contexts": {
      "post": {
        "tags": [
          "Domestic Payment Consent Auth Contexts"
        ],
        "summary": "Create domestic payment consent auth context (time-sensitive auth session) and return auth URL",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomesticPaymentConsentAuthContext"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentAuthContextCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentAuthContextCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentAuthContextCreateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pisp/domestic-payment-consent-auth-contexts/{domesticPaymentConsentAuthContextId}": {
      "get": {
        "tags": [
          "Domestic Payment Consent Auth Contexts"
        ],
        "summary": "Read domestic payment consent auth context",
        "parameters": [
          {
            "name": "domesticPaymentConsentAuthContextId",
            "in": "path",
            "description": "ID of DomesticPaymentConsent AuthContext",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentAuthContextReadResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentAuthContextReadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentAuthContextReadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pisp/domestic-payment-consents": {
      "post": {
        "tags": [
          "Domestic Payment Consents"
        ],
        "summary": "Create domestic payment consent",
        "parameters": [
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomesticPaymentConsentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentCreateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pisp/domestic-payment-consents/{domesticPaymentConsentId}": {
      "get": {
        "tags": [
          "Domestic Payment Consents"
        ],
        "summary": "Read domestic payment consent",
        "parameters": [
          {
            "name": "domesticPaymentConsentId",
            "in": "path",
            "description": "ID of DomesticPaymentConsent",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-exclude-external-api-operation",
            "in": "header",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentCreateResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Domestic Payment Consents"
        ],
        "summary": "Delete domestic payment consent",
        "parameters": [
          {
            "name": "domesticPaymentConsentId",
            "in": "path",
            "description": "ID of DomesticPaymentConsent",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pisp/domestic-payment-consents/{domesticPaymentConsentId}/funds-confirmation": {
      "get": {
        "tags": [
          "Domestic Payment Consents"
        ],
        "summary": "Read domestic payment consent funds confirmation",
        "parameters": [
          {
            "name": "domesticPaymentConsentId",
            "in": "path",
            "description": "ID of DomesticPaymentConsent",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentFundsConfirmationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentFundsConfirmationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentConsentFundsConfirmationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pisp/domestic-payments": {
      "post": {
        "tags": [
          "Domestic Payments"
        ],
        "summary": "Create domestic payment",
        "parameters": [
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomesticPaymentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pisp/domestic-payments/{externalApiId}": {
      "get": {
        "tags": [
          "Domestic Payments"
        ],
        "summary": "Read domestic payment",
        "parameters": [
          {
            "name": "externalApiId",
            "in": "path",
            "description": "External (bank) API ID of Domestic Payment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-domestic-payment-consent-id",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pisp/domestic-payments/{externalApiId}/payment-details": {
      "get": {
        "tags": [
          "Domestic Payments"
        ],
        "summary": "Read domestic payment payment details",
        "parameters": [
          {
            "name": "externalApiId",
            "in": "path",
            "description": "External (bank) API ID of Domestic Payment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-domestic-payment-consent-id",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentPaymentDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentPaymentDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomesticPaymentPaymentDetailsResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "required": [
          "Identification",
          "Name",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "description": "Name of the account, as assigned by the account servicing institution.\r\n\r\nUsage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.\r\n\r\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthContextRequest": {
        "required": [
          "Nonce",
          "State"
        ],
        "type": "object",
        "properties": {
          "State": {
            "type": "string",
            "description": "OAuth2 \"state\".",
            "nullable": true
          },
          "Nonce": {
            "type": "string",
            "description": "OpenID Connect \"nonce\".",
            "nullable": true
          },
          "CodeVerifier": {
            "type": "string",
            "nullable": true
          },
          "ModifiedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Authorisation": {
        "required": [
          "AuthorisationType"
        ],
        "type": "object",
        "properties": {
          "AuthorisationType": {
            "$ref": "#/components/schemas/AuthorisationType"
          },
          "CompletionDateTime": {
            "type": "string",
            "description": "Date and time at which the requested authorisation flow must be completed. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Authorisation2": {
        "type": "object",
        "properties": {
          "AuthorisationType": {
            "$ref": "#/components/schemas/Authorisation2AuthorisationType"
          },
          "CompletionDateTime": {
            "type": "string",
            "description": "Date and time at which the requested authorisation flow must be completed. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Authorisation2AuthorisationType": {
        "enum": [
          "Any",
          "Single"
        ],
        "type": "string"
      },
      "AuthorisationType": {
        "enum": [
          "Any",
          "Single"
        ],
        "type": "string"
      },
      "BaseResponse": {
        "type": "object",
        "properties": {
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Charges": {
        "required": [
          "Amount",
          "ChargeBearer",
          "Type"
        ],
        "type": "object",
        "properties": {
          "ChargeBearer": {
            "$ref": "#/components/schemas/OBInternalChargeBearerType1Code"
          },
          "Type": {
            "type": "string"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          }
        },
        "additionalProperties": false,
        "description": "Set of elements used to provide details of a charge for the payment initiation."
      },
      "Charges2": {
        "required": [
          "Amount",
          "ChargeBearer",
          "Type"
        ],
        "type": "object",
        "properties": {
          "ChargeBearer": {
            "$ref": "#/components/schemas/OBInternalChargeBearerType1Code"
          },
          "Type": {
            "type": "string"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          }
        },
        "additionalProperties": false,
        "description": "Set of elements used to provide details of a charge for the payment initiation."
      },
      "CreditorAccount": {
        "required": [
          "Identification",
          "Name",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level.\r\n\r\nNote, the account name is not the product name or the nickname of the account.\r\n\r\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Proxy": {
            "$ref": "#/components/schemas/OBProxy1"
          }
        },
        "additionalProperties": false
      },
      "CreditorAccount2": {
        "required": [
          "Identification",
          "Name",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level.\r\n\r\nNote, the account name is not the product name or the nickname of the account.\r\n\r\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Proxy": {
            "$ref": "#/components/schemas/OBProxy1"
          }
        },
        "additionalProperties": false
      },
      "CreditorAccount3": {
        "required": [
          "Identification",
          "Name",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level.\r\n\r\nNote, the account name is not the product name or the nickname of the account.\r\n\r\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Proxy": {
            "$ref": "#/components/schemas/OBProxy1"
          }
        },
        "additionalProperties": false
      },
      "CreditorAccount4": {
        "required": [
          "Identification",
          "Name",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level.\r\n\r\nNote, the account name is not the product name or the nickname of the account.\r\n\r\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Proxy": {
            "$ref": "#/components/schemas/OBProxy1"
          }
        },
        "additionalProperties": false
      },
      "CreditorAgent": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "Identification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[0-9]{4}[0]{2}[A-Z0-9]{12}[0-9]{2}",
            "type": "string",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        },
        "additionalProperties": false
      },
      "CreditorAgent2": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "Identification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[0-9]{4}[0]{2}[A-Z0-9]{12}[0-9]{2}",
            "type": "string",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        },
        "additionalProperties": false
      },
      "CreditorAgent3": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "Identification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[0-9]{4}[0]{2}[A-Z0-9]{12}[0-9]{2}",
            "type": "string",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        },
        "additionalProperties": false
      },
      "CreditorAgent4": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "Identification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[0-9]{4}[0]{2}[A-Z0-9]{12}[0-9]{2}",
            "type": "string",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        },
        "additionalProperties": false
      },
      "CreditorReferenceInformation": {
        "type": "object",
        "properties": {
          "Code": {
            "$ref": "#/components/schemas/ExternalCreditorReferenceType1Code"
          },
          "Issuer": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Entity that assigns the identification.",
            "nullable": true
          },
          "Reference": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Data": {
        "required": [
          "ConsentId",
          "Initiation"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "Initiation": {
            "$ref": "#/components/schemas/Initiation"
          }
        },
        "additionalProperties": false
      },
      "Data17": {
        "type": "object",
        "properties": {
          "FundsAvailableResult": {
            "$ref": "#/components/schemas/FundsAvailableResult"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        },
        "additionalProperties": false
      },
      "Data2": {
        "required": [
          "Initiation"
        ],
        "type": "object",
        "properties": {
          "ReadRefundAccount": {
            "$ref": "#/components/schemas/Data2ReadRefundAccount"
          },
          "Initiation": {
            "$ref": "#/components/schemas/Initiation2"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBSCASupportData1"
          }
        },
        "additionalProperties": false
      },
      "Data2ReadRefundAccount": {
        "enum": [
          "No",
          "Yes"
        ],
        "type": "string"
      },
      "Data3": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "Initiation",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "Status": {
            "$ref": "#/components/schemas/Data3Status"
          },
          "StatusReason": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBStatusReason"
            },
            "nullable": true
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "ReadRefundAccount": {
            "$ref": "#/components/schemas/Data3ReadRefundAccount"
          },
          "CutOffDateTime": {
            "type": "string",
            "description": "Specified cut-off date and time for the payment consent. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "ExpectedExecutionDateTime": {
            "type": "string",
            "description": "Expected execution date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "ExpectedSettlementDateTime": {
            "type": "string",
            "description": "Expected settlement date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Charges"
            },
            "nullable": true
          },
          "Initiation": {
            "$ref": "#/components/schemas/Initiation3"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/Authorisation2"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBSCASupportData1"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBCashAccountDebtor4"
          }
        },
        "additionalProperties": false
      },
      "Data30": {
        "type": "object",
        "properties": {
          "PaymentStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWritePaymentDetails1"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Data3ReadRefundAccount": {
        "enum": [
          "No",
          "Yes"
        ],
        "type": "string"
      },
      "Data3Status": {
        "enum": [
          "AWAU",
          "RJCT",
          "AUTH",
          "COND"
        ],
        "type": "string"
      },
      "Data4": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "DomesticPaymentId",
          "Initiation",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "DomesticPaymentId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the domestic payment resource."
          },
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the message was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "Status": {
            "$ref": "#/components/schemas/Data4Status"
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "StatusReason": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBStatusReason"
            },
            "nullable": true
          },
          "ExpectedExecutionDateTime": {
            "type": "string",
            "description": "Expected execution date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "ExpectedSettlementDateTime": {
            "type": "string",
            "description": "Expected settlement date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "Refund": {
            "$ref": "#/components/schemas/Refund"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Charges2"
            },
            "nullable": true
          },
          "Initiation": {
            "$ref": "#/components/schemas/Initiation4"
          },
          "MultiAuthorisation": {
            "$ref": "#/components/schemas/MultiAuthorisation"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBCashAccountDebtor4"
          }
        },
        "additionalProperties": false
      },
      "Data4Status": {
        "enum": [
          "RCVD",
          "PDNG",
          "ACTC",
          "PATC",
          "ACCP",
          "ACFC",
          "ACSP",
          "ACWC",
          "ACSC",
          "ACWP",
          "ACCC",
          "BLCK",
          "RJCT"
        ],
        "type": "string"
      },
      "DebtorAccount": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\r\n\r\nNote, the account name is not the product name or the nickname of the account.",
            "nullable": true
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Proxy": {
            "$ref": "#/components/schemas/OBProxy1"
          }
        },
        "additionalProperties": false
      },
      "DebtorAccount2": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\r\n\r\nNote, the account name is not the product name or the nickname of the account.",
            "nullable": true
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Proxy": {
            "$ref": "#/components/schemas/OBProxy1"
          }
        },
        "additionalProperties": false
      },
      "DebtorAccount3": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\r\n\r\nNote, the account name is not the product name or the nickname of the account.",
            "nullable": true
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Proxy": {
            "$ref": "#/components/schemas/OBProxy1"
          }
        },
        "additionalProperties": false
      },
      "DebtorAccount4": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\r\n\r\nNote, the account name is not the product name or the nickname of the account.",
            "nullable": true
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Proxy": {
            "$ref": "#/components/schemas/OBProxy1"
          }
        },
        "additionalProperties": false
      },
      "DomesticPaymentConsentAuthContext": {
        "required": [
          "DomesticPaymentConsentId"
        ],
        "type": "object",
        "properties": {
          "DomesticPaymentConsentId": {
            "type": "string",
            "format": "uuid"
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DomesticPaymentConsentAuthContextCreateResponse": {
        "required": [
          "AppSessionId",
          "AuthUrl",
          "Created",
          "DomesticPaymentConsentId",
          "Id",
          "State"
        ],
        "type": "object",
        "properties": {
          "AuthUrl": {
            "type": "string",
            "description": "Time-sensitive URL to enable end-user authentication via website or mobile app",
            "nullable": true
          },
          "AppSessionId": {
            "type": "string",
            "description": "App session ID that can be checked when processing post-auth redirect",
            "nullable": true
          },
          "State": {
            "type": "string",
            "nullable": true
          },
          "DomesticPaymentConsentId": {
            "type": "string",
            "format": "uuid"
          },
          "Id": {
            "type": "string",
            "description": "Unique Open Banking Connector ID (used in local database).",
            "format": "uuid"
          },
          "Created": {
            "type": "string",
            "description": "Created timestamp in local database.",
            "format": "date-time"
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to create requests."
      },
      "DomesticPaymentConsentAuthContextReadResponse": {
        "required": [
          "Created",
          "DomesticPaymentConsentId",
          "Id",
          "State"
        ],
        "type": "object",
        "properties": {
          "State": {
            "type": "string",
            "nullable": true
          },
          "DomesticPaymentConsentId": {
            "type": "string",
            "format": "uuid"
          },
          "Id": {
            "type": "string",
            "description": "Unique Open Banking Connector ID (used in local database).",
            "format": "uuid"
          },
          "Created": {
            "type": "string",
            "description": "Created timestamp in local database.",
            "format": "date-time"
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Read requests."
      },
      "DomesticPaymentConsentCreateResponse": {
        "required": [
          "AuthContextModified",
          "BankRegistrationId",
          "Created",
          "ExternalApiId",
          "ExternalApiResponse",
          "ExternalApiResponseInfo",
          "Id"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBWriteDomesticConsentResponse5"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "ExternalApiUserId": {
            "type": "string",
            "description": "User ID at external API (bank) which may or may not be available via ID token \"sub\" claim. If retrieved from ID\r\ntoken or supplied on object creation, it will be stored here.",
            "nullable": true
          },
          "AuthContextModified": {
            "type": "string",
            "format": "date-time"
          },
          "AuthContextModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "BankRegistrationId": {
            "type": "string",
            "description": "ID of associated BankRegistration object",
            "format": "uuid"
          },
          "ExternalApiId": {
            "type": "string",
            "description": "External (bank) API ID. This should be unique between objects created at the\r\nsame bank but we do not assume global uniqueness between objects created at multiple banks.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Unique Open Banking Connector ID (used in local database).",
            "format": "uuid"
          },
          "Created": {
            "type": "string",
            "description": "Created timestamp in local database.",
            "format": "date-time"
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to DomesticPaymentConsent Create and Read requests."
      },
      "DomesticPaymentConsentFundsConfirmationResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBWriteFundsConfirmationResponse1"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to DomesticPaymentConsent ReadFundsConfirmation requests"
      },
      "DomesticPaymentConsentRequest": {
        "required": [
          "BankRegistrationId"
        ],
        "type": "object",
        "properties": {
          "ExternalApiRequest": {
            "$ref": "#/components/schemas/OBWriteDomesticConsent4"
          },
          "BankRegistrationId": {
            "type": "string",
            "description": "Specifies BankRegistration object to use when creating the consent.",
            "format": "uuid"
          },
          "ExternalApiObject": {
            "$ref": "#/components/schemas/ExternalApiConsent"
          },
          "ExternalApiUserId": {
            "type": "string",
            "description": "User ID at external API (bank) which may or may not be available via ID token \"sub\" claim. It can also optionally\r\nbe specified here.",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DomesticPaymentPaymentDetailsResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBWritePaymentDetailsResponse1"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to DomesticPayment ReadPaymentDetails requests."
      },
      "DomesticPaymentRequest": {
        "required": [
          "DomesticPaymentConsentId",
          "ExternalApiRequest"
        ],
        "type": "object",
        "properties": {
          "DomesticPaymentConsentId": {
            "type": "string",
            "description": "Specifies Domestic Payment Consent to use when creating payment.\r\nIf domestic payment consent has been successfully authorised, a token will be associated with the consent which can\r\nbe used to create the payment.",
            "format": "uuid"
          },
          "ExternalApiRequest": {
            "$ref": "#/components/schemas/OBWriteDomestic2"
          },
          "ModifiedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DomesticPaymentResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBWriteDomesticResponse5"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to DomesticPayment Read and Create requests."
      },
      "ExternalApiConsent": {
        "type": "object",
        "properties": {
          "ExternalApiId": {
            "type": "string",
            "description": "External (bank) API ID, i.e. ID of object at bank. This should be unique between objects created at the\r\nsame bank but we do not assume global uniqueness between objects created at multiple banks.",
            "nullable": true
          },
          "AuthContext": {
            "$ref": "#/components/schemas/AuthContextRequest"
          }
        },
        "additionalProperties": false
      },
      "ExternalApiResponseInfo": {
        "required": [
          "XFapiInteractionId"
        ],
        "type": "object",
        "properties": {
          "XFapiInteractionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalCategoryPurpose1Code": {
        "enum": [
          "BONU",
          "CASH",
          "CBLK",
          "CCRD",
          "CGWV",
          "CIPC",
          "CONC",
          "CORT",
          "DCRD",
          "DIVI",
          "DVPM",
          "EPAY",
          "FCDT",
          "FCIN",
          "FCOL",
          "GOVT",
          "GP2P",
          "HEDG",
          "ICCP",
          "IDCP",
          "INTC",
          "INTE",
          "LBOX",
          "LOAN",
          "MP2B",
          "MP2P",
          "OTHR",
          "PENS",
          "RPRE",
          "RRCT",
          "RVPM",
          "SALA",
          "SECU",
          "SSBE",
          "SUPP",
          "SWEP",
          "TAXS",
          "TOPG",
          "TRAD",
          "TREA",
          "VATX",
          "VOST",
          "WHLD",
          "ZABA"
        ],
        "type": "string",
        "description": "Enumeration of codes that outlines the type of purpose behind a transaction, payment or risk. \r\n\r\n For all enum values see `ExternalCategoryPurpose1Code` [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "ExternalCreditorReferenceType1Code": {
        "enum": [
          "DISP",
          "FXDR",
          "PUOR",
          "RPIN",
          "RADM",
          "SCOR"
        ],
        "type": "string",
        "description": "Specifies the type of creditor reference as published in an external creditor reference type code set. For more information see `ExternalCreditorReferenceType1Code` in *ISO_External_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "ExternalDocumentType1Code": {
        "enum": [
          "CINV",
          "CNFA",
          "CONT",
          "CREN",
          "DEBN",
          "DISP",
          "DNFA",
          "HIRI",
          "INVS",
          "MSIN",
          "PROF",
          "PUOR",
          "QUOT",
          "SBIN",
          "SPRR",
          "TISH"
        ],
        "type": "string",
        "description": "Specifies the document type as published in an external document type code list. For more information see `ExternalDocumentType1Code` in *ISO_External_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "ExternalProxyAccountType1Code": {
        "enum": [
          "TELE",
          "EMAL",
          "DNAM",
          "CINC",
          "COTX",
          "COID",
          "CUST",
          "DRLC",
          "EIDN",
          "EWAL",
          "PVTX",
          "LEIC",
          "MBNO",
          "NIDN",
          "CCPT",
          "SHID",
          "SOSE",
          "TOKN",
          "UBIL",
          "VIPN",
          "BIID"
        ],
        "type": "string",
        "description": "Specifies the external proxy account type code, as published in the proxy account type external code set.<br /> For a full list of values see `ExternalProxyAccountType1Code` in *ISO_External_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "ExternalPurpose1Code": {
        "enum": [
          "BKDF",
          "BKFE",
          "BKFM",
          "BKIP",
          "BKPP",
          "CBLK",
          "CDCB",
          "CDCD",
          "CDCS",
          "CDDP",
          "CDOC",
          "CDQC",
          "ETUP",
          "FCOL",
          "MTUP",
          "ACCT",
          "CASH",
          "COLL",
          "CSDB",
          "DEPT",
          "INTC",
          "INTP",
          "LIMA",
          "NETT",
          "BFWD",
          "CCIR",
          "CCPC",
          "CCPM",
          "CCSM",
          "CRDS",
          "CRPR",
          "CRSP",
          "CRTL",
          "EQPT",
          "EQUS",
          "EXPT",
          "EXTD",
          "FIXI",
          "FWBC",
          "FWCC",
          "FWSB",
          "FWSC",
          "MARG",
          "MBSB",
          "MBSC",
          "MGCC",
          "MGSC",
          "OCCC",
          "OPBC",
          "OPCC",
          "OPSB",
          "OPSC",
          "OPTN",
          "OTCD",
          "REPO",
          "RPBC",
          "RPCC",
          "RPSB",
          "RPSC",
          "RVPO",
          "SBSC",
          "SCIE",
          "SCIR",
          "SCRP",
          "SHBC",
          "SHCC",
          "SHSL",
          "SLEB",
          "SLOA",
          "SWBC",
          "SWCC",
          "SWPT",
          "SWSB",
          "SWSC",
          "TBAS",
          "TBBC",
          "TBCC",
          "TRCP",
          "AGRT",
          "AREN",
          "BEXP",
          "BOCE",
          "COMC",
          "CPYR",
          "GDDS",
          "GDSV",
          "GSCB",
          "LICF",
          "MP2B",
          "POPE",
          "ROYA",
          "SCVE",
          "SERV",
          "SUBS",
          "SUPP",
          "TRAD",
          "CHAR",
          "COMT",
          "MP2P",
          "ECPG",
          "ECPR",
          "ECPU",
          "EPAY",
          "CLPR",
          "COMP",
          "DBTC",
          "GOVI",
          "HLRP",
          "HLST",
          "INPC",
          "INPR",
          "INSC",
          "INSU",
          "INTE",
          "LBRI",
          "LIFI",
          "LOAN",
          "LOAR",
          "PENO",
          "PPTI",
          "RELG",
          "RINP",
          "TRFD",
          "FORW",
          "FXNT",
          "ADMG",
          "ADVA",
          "BCDM",
          "BCFG",
          "BLDM",
          "BNET",
          "CBFF",
          "CBFR",
          "CCRD",
          "CDBL",
          "CFEE",
          "CGDD",
          "CORT",
          "COST",
          "CPKC",
          "DCRD",
          "DSMT",
          "DVPM",
          "EDUC",
          "FACT",
          "FAND",
          "FCPM",
          "FEES",
          "GIFT",
          "GOVT",
          "ICCP",
          "IDCP",
          "IHRP",
          "INSM",
          "IVPT",
          "MCDM",
          "MCFG",
          "MSVC",
          "NOWS",
          "OCDM",
          "OCFG",
          "OFEE",
          "OTHR",
          "PADD",
          "PTSP",
          "RCKE",
          "RCPT",
          "REBT",
          "REFU",
          "RENT",
          "REOD",
          "RIMB",
          "RPNT",
          "RRBN",
          "RRCT",
          "RRTP",
          "RVPM",
          "SLPI",
          "SPLT",
          "STDY",
          "TBAN",
          "TBIL",
          "TCSC",
          "TELI",
          "TMPG",
          "TPRI",
          "TPRP",
          "TRNC",
          "TRVC",
          "WEBI",
          "IPAY",
          "IPCA",
          "IPDO",
          "IPEA",
          "IPEC",
          "IPEW",
          "IPPS",
          "IPRT",
          "IPU2",
          "IPUW",
          "ANNI",
          "CAFI",
          "CFDI",
          "CMDT",
          "DERI",
          "DIVD",
          "FREX",
          "HEDG",
          "INVS",
          "PRME",
          "SAVG",
          "SECU",
          "SEPI",
          "TREA",
          "UNIT",
          "FNET",
          "FUTR",
          "ANTS",
          "CVCF",
          "DMEQ",
          "DNTS",
          "HLTC",
          "HLTI",
          "HSPC",
          "ICRF",
          "LTCF",
          "MAFC",
          "MARF",
          "MDCS",
          "VIEW",
          "CDEP",
          "SWFP",
          "SWPP",
          "SWRS",
          "SWUF",
          "ADCS",
          "AEMP",
          "ALLW",
          "ALMY",
          "BBSC",
          "BECH",
          "BENE",
          "BONU",
          "CCHD",
          "COMM",
          "CSLP",
          "GFRP",
          "GVEA",
          "GVEB",
          "GVEC",
          "GVED",
          "GWLT",
          "HREC",
          "PAYR",
          "PEFC",
          "PENS",
          "PRCP",
          "RHBS",
          "SALA",
          "SPSP",
          "SSBE",
          "LBIN",
          "LCOL",
          "LFEE",
          "LMEQ",
          "LMFI",
          "LMRK",
          "LREB",
          "LREV",
          "LSFL",
          "ESTX",
          "FWLV",
          "GSTX",
          "HSTX",
          "INTX",
          "NITX",
          "PTXP",
          "RDTX",
          "TAXS",
          "VATX",
          "WHLD",
          "TAXR",
          "B112",
          "BR12",
          "TLRF",
          "TLRR",
          "AIRB",
          "BUSB",
          "FERB",
          "RLWY",
          "TRPT",
          "CBTV",
          "ELEC",
          "ENRG",
          "GASB",
          "NWCH",
          "NWCM",
          "OTLC",
          "PHON",
          "UBIL",
          "WTER",
          "BOND",
          "CABD",
          "CAEQ",
          "CBCR",
          "DBCR",
          "DICL",
          "EQTS",
          "FLCR",
          "EFTC",
          "EFTD",
          "MOMA",
          "RAPI",
          "GAMB",
          "LOTT",
          "AMEX",
          "SASW",
          "AUCO",
          "PCOM",
          "PDEP",
          "PLDS",
          "PLRF",
          "GAFA",
          "GAHO",
          "CPEN",
          "DEPD",
          "RETL",
          "DEBT"
        ],
        "type": "string",
        "description": "This is a partial list, For a full list see `ExternalPurpose1Code` [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "FundsAvailableResult": {
        "required": [
          "FundsAvailable",
          "FundsAvailableDateTime"
        ],
        "type": "object",
        "properties": {
          "FundsAvailableDateTime": {
            "type": "string",
            "description": "Date and time at which the funds availability check was generated. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "FundsAvailable": {
            "type": "boolean",
            "description": "Flag to indicate the availability of funds given the Amount in the consent request."
          }
        },
        "additionalProperties": false
      },
      "Initiation": {
        "required": [
          "CreditorAccount",
          "EndToEndIdentification",
          "InstructedAmount",
          "InstructionIdentification"
        ],
        "type": "object",
        "properties": {
          "InstructionIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.\r\n\r\nUsage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction."
          },
          "EndToEndIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.\r\n\r\nUsage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.\r\n\r\nOB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field."
          },
          "LocalInstrument": {
            "type": "string",
            "nullable": true
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/InstructedAmount"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/DebtorAccount"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/CreditorAgent"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/CreditorAccount"
          },
          "CreditorPostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          },
          "UltimateCreditor": {
            "$ref": "#/components/schemas/OBUltimateCreditor1"
          },
          "UltimateDebtor": {
            "$ref": "#/components/schemas/OBUltimateDebtor1"
          },
          "RegulatoryReporting": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBRegulatoryReporting1"
            },
            "nullable": true
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBRemittanceInformation2"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        },
        "additionalProperties": false
      },
      "Initiation2": {
        "required": [
          "CreditorAccount",
          "EndToEndIdentification",
          "InstructedAmount",
          "InstructionIdentification"
        ],
        "type": "object",
        "properties": {
          "InstructionIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.\r\n\r\nUsage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction."
          },
          "EndToEndIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.\r\n\r\nUsage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.\r\n\r\nOB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field."
          },
          "LocalInstrument": {
            "type": "string",
            "nullable": true
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/InstructedAmount2"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/DebtorAccount2"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/CreditorAgent2"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/CreditorAccount2"
          },
          "CreditorPostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          },
          "UltimateCreditor": {
            "$ref": "#/components/schemas/OBUltimateCreditor1"
          },
          "UltimateDebtor": {
            "$ref": "#/components/schemas/OBUltimateDebtor1"
          },
          "RegulatoryReporting": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBRegulatoryReporting1"
            },
            "nullable": true
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBRemittanceInformation2"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        },
        "additionalProperties": false
      },
      "Initiation3": {
        "required": [
          "CreditorAccount",
          "EndToEndIdentification",
          "InstructedAmount",
          "InstructionIdentification"
        ],
        "type": "object",
        "properties": {
          "InstructionIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.\r\n\r\nUsage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction."
          },
          "EndToEndIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.\r\n\r\nUsage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.\r\n\r\nOB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field."
          },
          "LocalInstrument": {
            "type": "string",
            "nullable": true
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/InstructedAmount3"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/DebtorAccount3"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/CreditorAgent3"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/CreditorAccount3"
          },
          "CreditorPostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          },
          "UltimateCreditor": {
            "$ref": "#/components/schemas/OBUltimateCreditor1"
          },
          "UltimateDebtor": {
            "$ref": "#/components/schemas/OBUltimateDebtor1"
          },
          "RegulatoryReporting": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBRegulatoryReporting1"
            },
            "nullable": true
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBRemittanceInformation2"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        },
        "additionalProperties": false
      },
      "Initiation4": {
        "required": [
          "CreditorAccount",
          "EndToEndIdentification",
          "InstructedAmount",
          "InstructionIdentification"
        ],
        "type": "object",
        "properties": {
          "InstructionIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.\r\n\r\nUsage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction."
          },
          "EndToEndIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.\r\n\r\nUsage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.\r\n\r\nOB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field."
          },
          "LocalInstrument": {
            "type": "string",
            "nullable": true
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/InstructedAmount4"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/DebtorAccount4"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/CreditorAgent4"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/CreditorAccount4"
          },
          "CreditorPostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          },
          "UltimateCreditor": {
            "$ref": "#/components/schemas/OBUltimateCreditor1"
          },
          "UltimateDebtor": {
            "$ref": "#/components/schemas/OBUltimateDebtor1"
          },
          "RegulatoryReporting": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBRegulatoryReporting1"
            },
            "nullable": true
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBRemittanceInformation2"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        },
        "additionalProperties": false
      },
      "InstructedAmount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "InstructedAmount2": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "InstructedAmount3": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "InstructedAmount4": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Links": {
        "required": [
          "Self"
        ],
        "type": "object",
        "properties": {
          "Self": {
            "type": "string",
            "format": "uri"
          },
          "First": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Prev": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Next": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Last": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Links relevant to the payload"
      },
      "Meta": {
        "type": "object",
        "properties": {
          "TotalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "FirstAvailableDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastAvailableDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Meta Data relevant to the payload"
      },
      "MultiAuthorisation": {
        "required": [
          "Status"
        ],
        "type": "object",
        "properties": {
          "Status": {
            "$ref": "#/components/schemas/MultiAuthorisationStatus"
          },
          "NumberRequired": {
            "type": "integer",
            "description": "Number of authorisations required for payment order (total required at the start of the multi authorisation journey).",
            "format": "int32",
            "nullable": true
          },
          "NumberReceived": {
            "type": "integer",
            "description": "Number of authorisations received.",
            "format": "int32",
            "nullable": true
          },
          "LastUpdateDateTime": {
            "type": "string",
            "description": "Last date and time at the authorisation flow was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "ExpirationDateTime": {
            "type": "string",
            "description": "Date and time at which the requested authorisation flow must be completed. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MultiAuthorisationStatus": {
        "enum": [
          "AUTH",
          "AWAF",
          "RJCT"
        ],
        "type": "string"
      },
      "OBActiveOrHistoricCurrencyAndAmount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Amount of money associated with the charge type."
      },
      "OBAddressType2Code": {
        "enum": [
          "BIZZ",
          "DLVY",
          "MLTO",
          "PBOX",
          "ADDR",
          "HOME",
          "CORR",
          "STAT"
        ],
        "type": "string",
        "description": "Identifies the nature of the postal address. For a full set of codes see `OBAddressType2Code` [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)."
      },
      "OBCashAccountDebtor4": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "description": "^ Name of the identification scheme, in a coded form as published in an external list. | Namespaced Enumeration OBInternalAccountIdentification4Code",
            "nullable": true
          },
          "Identification": {
            "type": "string",
            "description": "^ Identification assigned by an institution to identify an account. This identification is known by the account owner. | Max256Text",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "^ Name of the account, as assigned by the account servicing institution.  Usage The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.",
            "nullable": true
          },
          "SecondaryIdentification": {
            "type": "string",
            "description": "^ This is secondary identification of the account, as assigned by the account servicing institution.  This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination) | Max34Text",
            "nullable": true
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[0-9]{4}[0]{2}[A-Z0-9]{12}[0-9]{2}",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "^ Only included in the response if `Data. ReadRefundAccount` is set to `Yes` in the consent."
      },
      "OBInternalChargeBearerType1Code": {
        "enum": [
          "BorneByCreditor",
          "BorneByDebtor",
          "FollowingServiceLevel",
          "Shared"
        ],
        "type": "string",
        "description": "Specifies which party/parties will bear the charges associated with the processing of the payment transaction. For a full list of values refer to `OBInternalChargeBearerType1Code` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "OBInternalExtendedAccountType1Code": {
        "enum": [
          "Business",
          "BusinessSavingsAccount",
          "Charity",
          "Collection",
          "Corporate",
          "Ewallet",
          "Government",
          "Investment",
          "ISA",
          "JointPersonal",
          "Pension",
          "Personal",
          "PersonalSavingsAccount",
          "Premier",
          "Wealth"
        ],
        "type": "string",
        "description": "Specifies the extended type of account."
      },
      "OBPostalAddress7": {
        "type": "object",
        "properties": {
          "AddressType": {
            "$ref": "#/components/schemas/OBAddressType2Code"
          },
          "Department": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "SubDepartment": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "StreetName": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "BuildingNumber": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "BuildingName": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Floor": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "UnitNumber": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Room": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "PostBox": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "TownLocationName": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "DistrictName": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "CareOf": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "PostCode": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "TownName": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "CountrySubDivision": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Country": {
            "pattern": "^[A-Z]{2,2}$",
            "type": "string",
            "nullable": true
          },
          "AddressLine": {
            "maxItems": 7,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Information that locates and identifies a specific address, as defined by postal services."
      },
      "OBProxy1": {
        "required": [
          "Code",
          "Identification"
        ],
        "type": "object",
        "properties": {
          "Identification": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Identification used to indicate the account identification under another specified name."
          },
          "Code": {
            "$ref": "#/components/schemas/ExternalProxyAccountType1Code"
          },
          "Type": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Type of the proxy identification.",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Specifies an alternate assumed name for the identification of the account."
      },
      "OBReferredDocumentInformation": {
        "type": "object",
        "properties": {
          "Code": {
            "$ref": "#/components/schemas/ExternalDocumentType1Code"
          },
          "Issuer": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Identification of the issuer of the reference document type.",
            "nullable": true
          },
          "Number": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Identification of the type specified for the referred document line.",
            "nullable": true
          },
          "RelatedDate": {
            "type": "string",
            "description": "Date associated with the referred document line.",
            "format": "date-time",
            "nullable": true
          },
          "LineDetails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Set of elements used to provide the content of the referred document line.",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "OBRegulatoryAuthority2": {
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Name of the entity requiring the regulatory reporting information.",
            "nullable": true
          },
          "CountryCode": {
            "pattern": "^[A-Z]{2,2}$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Entity requiring the regulatory reporting information."
      },
      "OBRegulatoryReporting1": {
        "type": "object",
        "properties": {
          "DebitCreditReportingIndicator": {
            "$ref": "#/components/schemas/OBRegulatoryReporting1DebitCreditReportingIndicator"
          },
          "Authority": {
            "$ref": "#/components/schemas/OBRegulatoryAuthority2"
          },
          "Details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBStructuredRegulatoryReporting3"
            },
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Information needed due to regulatory and statutory requirements"
      },
      "OBRegulatoryReporting1DebitCreditReportingIndicator": {
        "enum": [
          "CRED",
          "DEBT",
          "BOTH"
        ],
        "type": "string"
      },
      "OBRemittanceInformation2": {
        "type": "object",
        "properties": {
          "Structured": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBRemittanceInformationStructured"
            },
            "nullable": true
          },
          "Unstructured": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system"
      },
      "OBRemittanceInformationStructured": {
        "type": "object",
        "properties": {
          "ReferredDocumentInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBReferredDocumentInformation"
            },
            "nullable": true
          },
          "ReferredDocumentAmount": {
            "type": "integer",
            "description": "Provides details on the amounts of the referred document.",
            "format": "int32",
            "nullable": true
          },
          "CreditorReferenceInformation": {
            "$ref": "#/components/schemas/CreditorReferenceInformation"
          },
          "Invoicer": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Invoicee": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "TaxRemittance": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Provides remittance information about a payment made for tax-related purposes.",
            "nullable": true
          },
          "AdditionalRemittanceInformation": {
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional information, in free text form, to complement the structured remittance information.",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "OBRisk1": {
        "type": "object",
        "properties": {
          "PaymentContextCode": {
            "$ref": "#/components/schemas/OBRisk1PaymentContextCode"
          },
          "MerchantCategoryCode": {
            "maxLength": 4,
            "minLength": 3,
            "type": "string",
            "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
            "nullable": true
          },
          "MerchantCustomerIdentification": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "The unique customer identifier of the PSU with the merchant.",
            "nullable": true
          },
          "ContractPresentIndicator": {
            "type": "boolean",
            "description": "Indicates if Payee has a contractual relationship with the PISP.",
            "nullable": true
          },
          "ContractPresentInidicator": {
            "type": "boolean",
            "description": "Indicates if Payee has a contractual relationship with the PISP.",
            "nullable": true
          },
          "BeneficiaryPrepopulatedIndicator": {
            "type": "boolean",
            "description": "Indicates if PISP has immutably prepopulated payment details in for the PSU.",
            "nullable": true
          },
          "PaymentPurposeCode": {
            "$ref": "#/components/schemas/ExternalPurpose1Code"
          },
          "CategoryPurposeCode": {
            "$ref": "#/components/schemas/ExternalCategoryPurpose1Code"
          },
          "BeneficiaryAccountType": {
            "$ref": "#/components/schemas/OBInternalExtendedAccountType1Code"
          },
          "DeliveryAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        },
        "additionalProperties": false,
        "description": "The Risk section is sent by the initiating party to the ASPSP.\r\n\r\nIt is used to specify additional details for risk scoring for Payments."
      },
      "OBRisk1PaymentContextCode": {
        "enum": [
          "BillingGoodsAndServicesInAdvance",
          "BillingGoodsAndServicesInArrears",
          "EcommerceMerchantInitiatedPayment",
          "FaceToFacePointOfSale",
          "TransferToSelf",
          "TransferToThirdParty"
        ],
        "type": "string"
      },
      "OBSCASupportData1": {
        "type": "object",
        "properties": {
          "RequestedSCAExemptionType": {
            "$ref": "#/components/schemas/OBSCASupportData1RequestedSCAExemptionType"
          },
          "AppliedAuthenticationApproach": {
            "$ref": "#/components/schemas/OBSCASupportData1AppliedAuthenticationApproach"
          },
          "ReferencePaymentOrderId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "If the payment is recurring, then this field is populated with the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence. The value here refers to the payment id e.g. DomesticPaymentId",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Supporting Data provided by TPP, when requesting SCA Exemption."
      },
      "OBSCASupportData1AppliedAuthenticationApproach": {
        "enum": [
          "CA",
          "SCA"
        ],
        "type": "string"
      },
      "OBSCASupportData1RequestedSCAExemptionType": {
        "enum": [
          "BillPayment",
          "ContactlessTravel",
          "EcommerceGoods",
          "EcommerceServices",
          "Kiosk",
          "Parking",
          "PartyToParty"
        ],
        "type": "string"
      },
      "OBStatusReason": {
        "type": "object",
        "properties": {
          "StatusReasonCode": {
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "description": "Specifies the status reason in a code form. \r\n\r\nFor a full list of values refer to `OBExternalStatusReason1Code` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)",
            "nullable": true
          },
          "StatusReasonDescription": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Description supporting the StatusReasonCode.",
            "nullable": true
          },
          "Path": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Path is optional but relevant when the status reason refers to an object/field and hence conditional to provide JSON path.",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "OBStructuredRegulatoryReporting3": {
        "type": "object",
        "properties": {
          "Type": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Specifies the type of the information supplied in the regulatory reporting details",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Country": {
            "pattern": "^[A-Z]{2,2}$",
            "type": "string",
            "nullable": true
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "Information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional details that cater for specific domestic regulatory requirements.",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Set of elements used to provide details on the regulatory reporting information."
      },
      "OBSupplementaryData1": {
        "type": "object",
        "additionalProperties": { },
        "description": "Additional information that can not be captured in the structured fields and/or any other specific block."
      },
      "OBUltimateCreditor1": {
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Name by which a party is known and which is usually used to identify that party.",
            "nullable": true
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Identification assigned by an institution.",
            "nullable": true
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[0-9]{4}[0]{2}[A-Z0-9]{12}[0-9]{2}",
            "type": "string",
            "nullable": true
          },
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        },
        "additionalProperties": { },
        "description": "Ultimate party to which an amount of money is due."
      },
      "OBUltimateDebtor1": {
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Name by which a party is known and which is usually used to identify that party.",
            "nullable": true
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Identification assigned by an institution.",
            "nullable": true
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[0-9]{4}[0]{2}[A-Z0-9]{12}[0-9]{2}",
            "type": "string",
            "nullable": true
          },
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        },
        "additionalProperties": { },
        "description": "Ultimate party that owes an amount of money to the (ultimate) creditor."
      },
      "OBWriteDomestic2": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        },
        "additionalProperties": false
      },
      "OBWriteDomesticConsent4": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data2"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        },
        "additionalProperties": false
      },
      "OBWriteDomesticConsentResponse5": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data3"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBWriteDomesticResponse5": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data4"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBWriteFundsConfirmationResponse1": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data17"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBWritePaymentDetails1": {
        "required": [
          "PaymentTransactionId",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "PaymentTransactionId": {
            "maxLength": 210,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable."
          },
          "Status": {
            "$ref": "#/components/schemas/OBWritePaymentDetails1Status"
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the status was assigned to the transfer.\r\n\r\n",
            "format": "date-time"
          },
          "StatusDetail": {
            "$ref": "#/components/schemas/StatusDetail"
          },
          "V3Status": {
            "$ref": "#/components/schemas/PaymentStatusStatus"
          }
        },
        "additionalProperties": { }
      },
      "OBWritePaymentDetails1Status": {
        "enum": [
          "PDNG",
          "ACTC",
          "PATC",
          "ACCP",
          "ACFC",
          "ACSP",
          "ACWC",
          "ACSC",
          "ACWP",
          "ACCC",
          "BLCK",
          "RJCT"
        ],
        "type": "string"
      },
      "OBWritePaymentDetailsResponse1": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data30"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": { }
      },
      "PaymentStatusStatus": {
        "enum": [
          "Accepted",
          "AcceptedCancellationRequest",
          "AcceptedCreditSettlementCompleted",
          "AcceptedCustomerProfile",
          "AcceptedFundsChecked",
          "AcceptedSettlementCompleted",
          "AcceptedSettlementInProcess",
          "AcceptedTechnicalValidation",
          "AcceptedWithChange",
          "AcceptedWithoutPosting",
          "Cancelled",
          "NoCancellationProcess",
          "PartiallyAcceptedCancellationRequest",
          "PartiallyAcceptedTechnicalCorrect",
          "PaymentCancelled",
          "Pending",
          "PendingCancellationRequest",
          "Received",
          "Rejected",
          "RejectedCancellationRequest"
        ],
        "type": "string"
      },
      "Refund": {
        "required": [
          "Account"
        ],
        "type": "object",
        "properties": {
          "Account": {
            "$ref": "#/components/schemas/Account"
          }
        },
        "additionalProperties": false
      },
      "StatusDetail": {
        "required": [
          "Status"
        ],
        "type": "object",
        "properties": {
          "LocalInstrument": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "$ref": "#/components/schemas/StatusDetailStatus"
          },
          "StatusReason": {
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "description": "Reason Code provided for the status of a transfer. For a full list of values see code values for `OBExternalStatusReason1Code` in *ISO_External_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)",
            "nullable": true
          },
          "StatusReasonDescription": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Reason provided for the status of a transfer. For a full list of values see the code name entries for `OBExternalStatusReason1Code` in *ISO_External_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets).",
            "nullable": true
          },
          "V3Status": {
            "type": "string",
            "nullable": true
          },
          "V3StatusReason": {
            "$ref": "#/components/schemas/StatusDetailStatusReason"
          }
        },
        "additionalProperties": { }
      },
      "StatusDetailStatus": {
        "enum": [
          "PDNG",
          "ACTC",
          "PATC",
          "ACCP",
          "ACFC",
          "ACSP",
          "ACWC",
          "ACSC",
          "ACWP",
          "ACCC",
          "BLCK",
          "RJCT"
        ],
        "type": "string"
      },
      "StatusDetailStatusReason": {
        "enum": [
          "Cancelled",
          "PendingFailingSettlement",
          "PendingSettlement",
          "Proprietary",
          "ProprietaryRejection",
          "Suspended",
          "Unmatched"
        ],
        "type": "string"
      }
    }
  }
}