{
  "openapi": "3.0.4",
  "info": {
    "title": "Account and Transaction API",
    "description": "Account and Transaction API for Open Banking Connector Web App",
    "version": "14.0.0"
  },
  "paths": {
    "/aisp/account-access-consent-auth-contexts": {
      "post": {
        "tags": [
          "Account Access Consent Auth Contexts"
        ],
        "summary": "Create account access consent auth context (time-sensitive auth session) and return auth URL",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountAccessConsentAuthContext"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextCreateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/account-access-consent-auth-contexts/{accountAccessConsentAuthContextId}": {
      "get": {
        "tags": [
          "Account Access Consent Auth Contexts"
        ],
        "summary": "Read account access consent auth context",
        "parameters": [
          {
            "name": "accountAccessConsentAuthContextId",
            "in": "path",
            "description": "ID of AccountAccessConsent AuthContext",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextReadResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextReadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentAuthContextReadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/account-access-consents": {
      "post": {
        "tags": [
          "Account Access Consents"
        ],
        "summary": "Create account access consent",
        "parameters": [
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountAccessConsentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/account-access-consents/{accountAccessConsentId}": {
      "get": {
        "tags": [
          "Account Access Consents"
        ],
        "summary": "Read account access consent",
        "parameters": [
          {
            "name": "accountAccessConsentId",
            "in": "path",
            "description": "ID of AccountAccessConsent",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-exclude-external-api-operation",
            "in": "header",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessConsentCreateResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account Access Consents"
        ],
        "summary": "Delete account access consent",
        "parameters": [
          {
            "name": "accountAccessConsentId",
            "in": "path",
            "description": "ID of AccountAccessConsent",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-obc-exclude-external-api-operation",
            "in": "header",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Read accounts",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Read accounts",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Read balances",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Read balances",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/direct-debits": {
      "get": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Read direct debits",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/direct-debits": {
      "get": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Read direct debits",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectDebitsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/monzo-pots": {
      "get": {
        "tags": [
          "Monzo Pots"
        ],
        "summary": "Read Monzo pots",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MonzoPotsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonzoPotsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonzoPotsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/party": {
      "get": {
        "tags": [
          "Parties"
        ],
        "summary": "Read party",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/party": {
      "get": {
        "tags": [
          "Parties"
        ],
        "summary": "Read party",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/parties": {
      "get": {
        "tags": [
          "Parties"
        ],
        "summary": "Read parties",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parties2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parties2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parties2Response"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/standing-orders": {
      "get": {
        "tags": [
          "Standing Orders"
        ],
        "summary": "Read standing orders",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/standing-orders": {
      "get": {
        "tags": [
          "Standing Orders"
        ],
        "summary": "Read standing orders",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandingOrdersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Read transactions",
        "parameters": [
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fromBookingDateTime",
            "in": "query",
            "description": "Start date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toBookingDateTime",
            "in": "query",
            "description": "End date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Read transactions",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fromBookingDateTime",
            "in": "query",
            "description": "Start date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toBookingDateTime",
            "in": "query",
            "description": "End date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aisp/accounts/{externalApiAccountId}/statements/{externalApiStatementId}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Read transactions",
        "parameters": [
          {
            "name": "externalApiAccountId",
            "in": "path",
            "description": "External (bank) API ID of Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalApiStatementId",
            "in": "path",
            "description": "External (bank) API ID of Statement",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-obc-account-access-consent-id",
            "in": "header",
            "description": "ID of AccountAccessConsent used for request (obtained when creating consent)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fromBookingDateTime",
            "in": "query",
            "description": "Start date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toBookingDateTime",
            "in": "query",
            "description": "End date and time for filtering of the Transaction records on the\r\nTransaction/BookingDateTime field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$",
            "type": "string",
            "nullable": true
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Provides the details to identify an account."
      },
      "Account3": {
        "required": [
          "Id",
          "Related"
        ],
        "type": "object",
        "properties": {
          "Related": {
            "type": "string",
            "description": "Absolute URI to the related resource.",
            "format": "uri"
          },
          "Id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification as assigned by the ASPSP to uniquely identify the related resource."
          }
        },
        "additionalProperties": { }
      },
      "AccountAccessConsentAuthContext": {
        "required": [
          "AccountAccessConsentId"
        ],
        "type": "object",
        "properties": {
          "AccountAccessConsentId": {
            "type": "string",
            "format": "uuid"
          },
          "State": {
            "type": "string",
            "description": "Optionally specify OAuth2 state to use instead of one automatically created by Open Banking Connector (using this\r\nis not recommended).",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountAccessConsentAuthContextCreateResponse": {
        "required": [
          "AccountAccessConsentId",
          "AppSessionId",
          "AuthUrl",
          "Created",
          "Id",
          "State"
        ],
        "type": "object",
        "properties": {
          "AuthUrl": {
            "type": "string",
            "description": "Time-sensitive URL to enable end-user authentication via website or mobile app",
            "nullable": true
          },
          "AppSessionId": {
            "type": "string",
            "description": "App session ID that can be checked when processing post-auth redirect",
            "nullable": true
          },
          "AccountAccessConsentId": {
            "type": "string",
            "format": "uuid"
          },
          "State": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Unique Open Banking Connector ID (used in local database).",
            "format": "uuid"
          },
          "Created": {
            "type": "string",
            "description": "Created timestamp in local database.",
            "format": "date-time"
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to create requests."
      },
      "AccountAccessConsentAuthContextReadResponse": {
        "required": [
          "AccountAccessConsentId",
          "Created",
          "Id",
          "State"
        ],
        "type": "object",
        "properties": {
          "AccountAccessConsentId": {
            "type": "string",
            "format": "uuid"
          },
          "State": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Unique Open Banking Connector ID (used in local database).",
            "format": "uuid"
          },
          "Created": {
            "type": "string",
            "description": "Created timestamp in local database.",
            "format": "date-time"
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Read requests."
      },
      "AccountAccessConsentCreateResponse": {
        "required": [
          "AuthContextModified",
          "BankRegistrationId",
          "Created",
          "ExternalApiId",
          "ExternalApiResponse",
          "ExternalApiResponseInfo",
          "Id"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadConsentResponse1"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "ExternalApiUserId": {
            "type": "string",
            "description": "User ID at external API (bank) which may or may not be available via ID token \"sub\" claim. If retrieved from ID\r\ntoken or supplied on object creation, it will be stored here.",
            "nullable": true
          },
          "AuthContextModified": {
            "type": "string",
            "format": "date-time"
          },
          "AuthContextModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "BankRegistrationId": {
            "type": "string",
            "description": "ID of associated BankRegistration object",
            "format": "uuid"
          },
          "ExternalApiId": {
            "type": "string",
            "description": "External (bank) API ID. This should be unique between objects created at the\r\nsame bank but we do not assume global uniqueness between objects created at multiple banks.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Unique Open Banking Connector ID (used in local database).",
            "format": "uuid"
          },
          "Created": {
            "type": "string",
            "description": "Created timestamp in local database.",
            "format": "date-time"
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to AccountAccessConsent Create and Read requests."
      },
      "AccountAccessConsentRequest": {
        "required": [
          "BankRegistrationId"
        ],
        "type": "object",
        "properties": {
          "TemplateRequest": {
            "$ref": "#/components/schemas/AccountAccessConsentTemplateRequest"
          },
          "ExternalApiRequest": {
            "$ref": "#/components/schemas/OBReadConsent1"
          },
          "BankRegistrationId": {
            "type": "string",
            "description": "Specifies BankRegistration object to use when creating the consent.",
            "format": "uuid"
          },
          "ExternalApiObject": {
            "$ref": "#/components/schemas/ExternalApiConsent"
          },
          "ExternalApiUserId": {
            "type": "string",
            "description": "User ID at external API (bank) which may or may not be available via ID token \"sub\" claim. It can also optionally\r\nbe specified here.",
            "nullable": true
          },
          "Reference": {
            "type": "string",
            "description": "Optional reference for linking object to something else - e.g. a user ID in the client\r\napplication. This field is not used by Open Banking Connector.",
            "nullable": true
          },
          "CreatedBy": {
            "type": "string",
            "description": "Optional \"created by\" string in local database. Similar to \"modified by\" for mutable fields in local database, this\r\nfield\r\ncan be used to denote authorship.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request object used to create an AccountAccessConsent. Includes a UK Open Banking request object\r\nplus information on the bank registration and bank functional API to use for the consent."
      },
      "AccountAccessConsentTemplateParameters": {
        "type": "object",
        "additionalProperties": false
      },
      "AccountAccessConsentTemplateRequest": {
        "required": [
          "Type"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/AccountAccessConsentTemplateType"
          },
          "Parameters": {
            "$ref": "#/components/schemas/AccountAccessConsentTemplateParameters"
          }
        },
        "additionalProperties": false
      },
      "AccountAccessConsentTemplateType": {
        "enum": [
          "MaximumPermissions"
        ],
        "type": "string"
      },
      "AccountsResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadAccount6"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Account read requests"
      },
      "Amount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { }
      },
      "Amount3": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          },
          "SubType": {
            "$ref": "#/components/schemas/Amount3SubType"
          }
        },
        "additionalProperties": { }
      },
      "Amount3SubType": {
        "enum": [
          "BCUR",
          "LCUR"
        ],
        "type": "string"
      },
      "Amount5": {
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string",
            "nullable": true
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "AuthContextRequest": {
        "required": [
          "Nonce",
          "State"
        ],
        "type": "object",
        "properties": {
          "State": {
            "type": "string",
            "description": "OAuth2 \"state\".",
            "nullable": true
          },
          "Nonce": {
            "type": "string",
            "description": "OpenID Connect \"nonce\".",
            "nullable": true
          },
          "CodeVerifier": {
            "type": "string",
            "nullable": true
          },
          "ModifiedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Balance": {
        "required": [
          "AccountId",
          "Amount",
          "CreditDebitIndicator",
          "DateTime",
          "Type"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "CreditDebitIndicator": {
            "$ref": "#/components/schemas/OBCreditDebitCode_2"
          },
          "Type": {
            "$ref": "#/components/schemas/OBBalanceType1CodeV4"
          },
          "DateTime": {
            "type": "string",
            "description": "Indicates the date (and time) of the balance. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "Amount": {
            "$ref": "#/components/schemas/Amount3"
          },
          "CreditLine": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditLine"
            },
            "nullable": true
          },
          "LocalAmount": {
            "$ref": "#/components/schemas/LocalAmount3"
          },
          "V3Type": {
            "$ref": "#/components/schemas/OBBalanceType1Code"
          }
        },
        "additionalProperties": { },
        "description": "Set of elements used to define the balance details."
      },
      "BalancesResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadBalance1"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Balance read requests"
      },
      "BaseResponse": {
        "type": "object",
        "properties": {
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreditLine": {
        "required": [
          "Included"
        ],
        "type": "object",
        "properties": {
          "Included": {
            "type": "boolean",
            "description": "Indicates whether or not the credit line is included in the balance of the account.\r\n\r\nUsage: If not present, credit line is not included in the balance amount of the account."
          },
          "Type": {
            "$ref": "#/components/schemas/CreditLineType"
          },
          "Amount": {
            "$ref": "#/components/schemas/Amount5"
          }
        },
        "additionalProperties": { },
        "description": "Set of elements used to provide details on the credit line."
      },
      "CreditLineType": {
        "enum": [
          "Available",
          "Credit",
          "Emergency",
          "Pre-Agreed",
          "Temporary"
        ],
        "type": "string"
      },
      "CreditorReferenceInformation": {
        "type": "object",
        "properties": {
          "Code": {
            "$ref": "#/components/schemas/ExternalCreditorReferenceType1Code"
          },
          "Issuer": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Entity that assigns the identification.",
            "nullable": true
          },
          "Reference": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Data": {
        "type": "object",
        "properties": {
          "Account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBAccount6"
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Data12": {
        "type": "object",
        "properties": {
          "StandingOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBStandingOrder6"
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Data2": {
        "required": [
          "Balance"
        ],
        "type": "object",
        "properties": {
          "Balance": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Balance"
            }
          },
          "TotalValue": {
            "$ref": "#/components/schemas/TotalValue4"
          }
        },
        "additionalProperties": { }
      },
      "Data4": {
        "required": [
          "Permissions"
        ],
        "type": "object",
        "properties": {
          "Permissions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permissions"
            }
          },
          "ExpirationDateTime": {
            "type": "string",
            "description": "Specified date and time the permissions will expire.\r\n\r\nIf this is not populated, the permissions will be open ended. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "TransactionFromDateTime": {
            "type": "string",
            "description": "Specified start date and time for the transaction query period.\r\n\r\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "TransactionToDateTime": {
            "type": "string",
            "description": "Specified end date and time for the transaction query period.\r\n\r\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        },
        "additionalProperties": { }
      },
      "Data5": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "Permissions",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification as assigned to identify the account access consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "Status": {
            "$ref": "#/components/schemas/Data5Status"
          },
          "StatusReason": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBStatusReason"
            },
            "description": "Specifies the status reason.",
            "nullable": true
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "Permissions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permissions2"
            }
          },
          "ExpirationDateTime": {
            "type": "string",
            "description": "Specified date and time the permissions will expire.\r\n\r\nIf this is not populated, the permissions will be open ended. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "TransactionFromDateTime": {
            "type": "string",
            "description": "Specified start date and time for the transaction query period.\r\n\r\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "TransactionToDateTime": {
            "type": "string",
            "description": "Specified end date and time for the transaction query period.\r\n\r\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Data5Status": {
        "enum": [
          "AWAU",
          "RJCT",
          "AUTH",
          "EXPD",
          "CANC"
        ],
        "type": "string"
      },
      "Data6": {
        "type": "object",
        "properties": {
          "DirectDebit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectDebit"
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Data8": {
        "type": "object",
        "properties": {
          "Party": {
            "$ref": "#/components/schemas/OBParty2"
          }
        },
        "additionalProperties": { }
      },
      "Data9": {
        "type": "object",
        "properties": {
          "Party": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBParty2"
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "DirectDebit": {
        "required": [
          "AccountId",
          "Name"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "DirectDebitId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "DirectDebitStatusCode": {
            "$ref": "#/components/schemas/ExternalMandateStatus1Code"
          },
          "MandateRelatedInformation": {
            "$ref": "#/components/schemas/OBMandateRelatedInformation1"
          },
          "Name": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string"
          },
          "PreviousPaymentDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "PreviousPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_0"
          }
        },
        "additionalProperties": { },
        "description": "Account to or from which a cash entry is made."
      },
      "DirectDebitsResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadDirectDebit2"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Direct Debit read requests"
      },
      "ExternalApiConsent": {
        "type": "object",
        "properties": {
          "ExternalApiId": {
            "type": "string",
            "description": "External (bank) API ID, i.e. ID of object at bank. This should be unique between objects created at the\r\nsame bank but we do not assume global uniqueness between objects created at multiple banks.",
            "nullable": true
          },
          "AuthContext": {
            "$ref": "#/components/schemas/AuthContextRequest"
          }
        },
        "additionalProperties": false
      },
      "ExternalApiResponseInfo": {
        "required": [
          "XFapiInteractionId"
        ],
        "type": "object",
        "properties": {
          "XFapiInteractionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalCategoryPurpose1Code": {
        "enum": [
          "BONU",
          "CASH",
          "CBLK",
          "CCRD",
          "CGWV",
          "CIPC",
          "CONC",
          "CORT",
          "DCRD",
          "DIVI",
          "DVPM",
          "EPAY",
          "FCDT",
          "FCIN",
          "FCOL",
          "GOVT",
          "GP2P",
          "HEDG",
          "ICCP",
          "IDCP",
          "INTC",
          "INTE",
          "LBOX",
          "LOAN",
          "MP2B",
          "MP2P",
          "OTHR",
          "PENS",
          "RPRE",
          "RRCT",
          "RVPM",
          "SALA",
          "SECU",
          "SSBE",
          "SUPP",
          "SWEP",
          "TAXS",
          "TOPG",
          "TRAD",
          "TREA",
          "VATX",
          "VOST",
          "WHLD",
          "ZABA"
        ],
        "type": "string",
        "description": "Enumeration of codes that outlines the type of purpose behind a transaction, payment or risk.  For all enum values see `ExternalCategoryPurpose1Code` in *ISO_External_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "ExternalCreditorReferenceType1Code": {
        "enum": [
          "DISP",
          "FXDR",
          "PUOR",
          "RPIN",
          "RADM",
          "SCOR"
        ],
        "type": "string",
        "description": "Specifies the type of creditor reference as published in an external creditor reference type code set. For more information see `ExternalCreditorReferenceType1Code` in *ISO_External_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "ExternalDocumentType1Code": {
        "enum": [
          "CINV",
          "CNFA",
          "CONT",
          "CREN",
          "DEBN",
          "DISP",
          "DNFA",
          "HIRI",
          "INVS",
          "MSIN",
          "PROF",
          "PUOR",
          "QUOT",
          "SBIN",
          "SPRR",
          "TISH"
        ],
        "type": "string",
        "description": "Specifies the document type as published in an external document type code list. For more information see `ExternalDocumentType1Code` in *ISO_External_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "ExternalEntryStatus1Code": {
        "enum": [
          "BOOK",
          "FUTR",
          "INFO",
          "PDNG",
          "RJCT"
        ],
        "type": "string",
        "description": "Status of a transaction entry on the books of the account servicer. <br />\r\n\r\nFor a full list of enumeration values refer to `ExternalEntryStatus1Code` in *ISO_External_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "ExternalMandateStatus1Code": {
        "enum": [
          "ACTV",
          "CANC",
          "EXPI",
          "SUSP"
        ],
        "type": "string",
        "description": "Specifies the status of the standing order in code form. For a full list of enumeration values refer to 'ExternalMandateStatus1Code' in *ISO_External_Codeset* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "ExternalProxyAccountType1Code": {
        "enum": [
          "TELE",
          "EMAL",
          "DNAM",
          "CINC",
          "COTX",
          "COID",
          "CUST",
          "DRLC",
          "EIDN",
          "EWAL",
          "PVTX",
          "LEIC",
          "MBNO",
          "NIDN",
          "CCPT",
          "SHID",
          "SOSE",
          "TOKN",
          "UBIL",
          "VIPN",
          "BIID"
        ],
        "type": "string",
        "description": "Specifies the external proxy account type code, as published in the proxy account type external code set.<br /> For more information and a full list of values see `ExternalProxyAccountType1Code` in *ISO_External_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "InstructedAmount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { }
      },
      "Links": {
        "required": [
          "Self"
        ],
        "type": "object",
        "properties": {
          "Self": {
            "type": "string",
            "format": "uri"
          },
          "First": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Prev": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Next": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Last": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Links relevant to the payload"
      },
      "LocalAmount3": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          },
          "SubType": {
            "$ref": "#/components/schemas/LocalAmount3SubType"
          }
        },
        "additionalProperties": { }
      },
      "LocalAmount3SubType": {
        "enum": [
          "BCUR",
          "LCUR"
        ],
        "type": "string"
      },
      "Meta": {
        "type": "object",
        "properties": {
          "TotalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "FirstAvailableDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastAvailableDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Meta Data relevant to the payload"
      },
      "MonzoPot": {
        "type": "object",
        "properties": {
          "PotId": {
            "type": "string",
            "nullable": true
          },
          "AccountId": {
            "type": "string",
            "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to\r\nthe account owner.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "CreditDebitIndicator": {
            "$ref": "#/components/schemas/OBCreditDebitCode_2"
          },
          "Balance": {
            "$ref": "#/components/schemas/Amount3"
          },
          "Style": {
            "type": "string",
            "nullable": true
          },
          "Goal": {
            "$ref": "#/components/schemas/Amount3"
          },
          "Updated": {
            "type": "string",
            "format": "date-time"
          },
          "Created": {
            "type": "string",
            "description": "Indicates the date (and time) of the balance.All dates in the JSON payloads are represented in ISO 8601 date-time\r\nformat.\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MonzoPotData": {
        "type": "object",
        "properties": {
          "Pot": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonzoPot"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MonzoPotsResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/ReadMonzoPot"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Monzo pot read requests"
      },
      "OBAccount6": {
        "required": [
          "AccountId"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "Status": {
            "$ref": "#/components/schemas/OBInternalAccountStatus1Code"
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "nullable": true
          },
          "AccountCategory": {
            "$ref": "#/components/schemas/OBInternalAccountType1Code"
          },
          "AccountTypeCode": {
            "$ref": "#/components/schemas/OBExternalAccountSubType1CodeV4"
          },
          "Description": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Nickname": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "OpeningDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "MaturityDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "SwitchStatus": {
            "type": "string",
            "nullable": true
          },
          "Account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            },
            "nullable": true
          },
          "StatementFrequencyAndFormat": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatementFrequencyAndFormatInner"
            },
            "nullable": true
          },
          "Servicer": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification5_0"
          },
          "V3AccountSubType": {
            "$ref": "#/components/schemas/OBExternalAccountSubType1Code"
          }
        },
        "additionalProperties": false,
        "description": "Unambiguous identification of the account to which credit and debit entries are made. The following fields are optional only for accounts that are switched:\r\n\r\n\r\n  * Data.Currency  \r\n\r\n  * Data.AccountCategory  \r\n\r\n  * Data.AccountTypeCode\r\n\r\n\r\nFor all other accounts, the fields must be populated by the ASPSP."
      },
      "OBActiveOrHistoricCurrencyAndAmount_0": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "The amount of the most recent direct debit collection."
      },
      "OBActiveOrHistoricCurrencyAndAmount_10": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "Transaction charges to be paid by the charge bearer."
      },
      "OBActiveOrHistoricCurrencyAndAmount_11": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "The amount of the last (most recent) Standing Order instruction."
      },
      "OBActiveOrHistoricCurrencyAndAmount_2": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "The amount of the first Standing Order"
      },
      "OBActiveOrHistoricCurrencyAndAmount_3": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "The amount of the next Standing Order."
      },
      "OBActiveOrHistoricCurrencyAndAmount_4": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "The amount of the final Standing Order"
      },
      "OBActiveOrHistoricCurrencyAndAmount_9": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { },
        "description": "Amount of money in the cash transaction entry."
      },
      "OBAddressType2Code": {
        "enum": [
          "BIZZ",
          "DLVY",
          "MLTO",
          "PBOX",
          "ADDR",
          "HOME",
          "CORR",
          "STAT"
        ],
        "type": "string",
        "description": "Identifies the nature of the postal address. <br /> For a full set of codes see `OBAddressType2Code` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)."
      },
      "OBBalanceType1Code": {
        "enum": [
          "ClosingAvailable",
          "ClosingBooked",
          "ClosingCleared",
          "Expected",
          "ForwardAvailable",
          "Information",
          "InterimAvailable",
          "InterimBooked",
          "InterimCleared",
          "OpeningAvailable",
          "OpeningBooked",
          "OpeningCleared",
          "PreviouslyClosedBooked"
        ],
        "type": "string",
        "description": "Balance type, in a coded form."
      },
      "OBBalanceType1CodeV4": {
        "enum": [
          "CLAV",
          "CLBD",
          "FWAV",
          "INFO",
          "ITAV",
          "ITBD",
          "OPAV",
          "OPBD",
          "PRCD",
          "XPCD"
        ],
        "type": "string",
        "description": "Balance type, in a coded form. <br /> For a full list of enumeration values refer to `ExternalBalanceType1Code` in *ISO_External_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)."
      },
      "OBBankTransactionCodeStructure1": {
        "required": [
          "Code"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Specifies the family within a domain."
          },
          "SubCode": {
            "type": "string",
            "description": "Specifies the sub-product family within a specific family.",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Set of elements used to fully identify the type of underlying transaction resulting in an entry."
      },
      "OBBranchAndFinancialInstitutionIdentification5_0": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account."
      },
      "OBBranchAndFinancialInstitutionIdentification5_1": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.\r\n\r\nThis is the servicer of the beneficiary account."
      },
      "OBBranchAndFinancialInstitutionIdentification6_1": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "Identification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$",
            "type": "string",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        },
        "additionalProperties": { },
        "description": "Financial institution servicing an account for the creditor."
      },
      "OBBranchAndFinancialInstitutionIdentification6_2": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "Identification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$",
            "type": "string",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        },
        "additionalProperties": { },
        "description": "Financial institution servicing an account for the debtor."
      },
      "OBCashAccount5_1": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Beneficiary account identification."
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Proxy": {
            "$ref": "#/components/schemas/OBProxy1"
          }
        },
        "additionalProperties": { },
        "description": "Provides the details to identify the beneficiary account."
      },
      "OBCashAccount6_0": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Proxy": {
            "$ref": "#/components/schemas/OBProxy1"
          }
        },
        "additionalProperties": { },
        "description": "Unambiguous identification of the account of the creditor, in the case of a debit transaction."
      },
      "OBCashAccount6_1": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Proxy": {
            "$ref": "#/components/schemas/OBProxy1"
          }
        },
        "additionalProperties": { },
        "description": "Unambiguous identification of the account of the debtor, in the case of a crebit transaction."
      },
      "OBCommunicationMethod": {
        "enum": [
          "EMAL",
          "FAXI",
          "FILE",
          "ONLI",
          "POST"
        ],
        "type": "string",
        "description": "For a full list of enumeration values see `OBExternalCommunicationMethod2Code` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_internal_CodeSets)"
      },
      "OBCreditDebitCode_1": {
        "enum": [
          "Credit",
          "Debit"
        ],
        "type": "string",
        "description": "Indicates whether the transaction is a credit or a debit entry. <br />\r\n\r\n<br />\r\n\r\nFor a full list of enumeration values refer to `OBInternalCreditDebitCode` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "OBCreditDebitCode_2": {
        "enum": [
          "Credit",
          "Debit"
        ],
        "type": "string",
        "description": "Indicates whether the balance is a credit or a debit balance. \r\n\r\nUsage: A zero balance is considered to be a credit balance.\r\n\r\n<br />\r\n\r\nFor a full list of enumeration values refer to `OBInternalCreditDebitCode` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "OBCurrencyExchange5": {
        "required": [
          "SourceCurrency"
        ],
        "type": "object",
        "properties": {
          "SourceCurrency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "description": "Currency from which an amount is to be converted in a currency conversion."
          },
          "TargetCurrency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "description": "Currency into which an amount is to be converted in a currency conversion.",
            "nullable": true
          },
          "UnitCurrency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "description": "Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.",
            "nullable": true
          },
          "ExchangeRate": {
            "type": "number",
            "description": "Factor used to convert an amount from one currency into another. This reflects the price at which one currency was bought with another currency.\r\n\r\nUsage: ExchangeRate expresses the ratio between UnitCurrency and QuotedCurrency (ExchangeRate = UnitCurrency/QuotedCurrency).",
            "format": "double",
            "nullable": true
          },
          "ContractIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification to unambiguously identify the foreign exchange contract.",
            "nullable": true
          },
          "QuotationDate": {
            "type": "string",
            "description": "Date and time at which an exchange rate is quoted. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/InstructedAmount"
          }
        },
        "additionalProperties": { },
        "description": "Set of elements used to provide details on the currency exchange."
      },
      "OBExtendedProprietaryBankTransactionCode": {
        "required": [
          "Code"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Proprietary bank transaction code to identify the underlying transaction."
          },
          "Issuer": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Identification of the issuer of the proprietary bank transaction code.",
            "nullable": true
          },
          "Description": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Description of the code and its usage on the ASPSP channel",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Additional proprietary bank transaction codes used by the ASPSP for the underlying transaction"
      },
      "OBExternalAccountSubType1Code": {
        "enum": [
          "ChargeCard",
          "CreditCard",
          "CurrentAccount",
          "EMoney",
          "Loan",
          "Mortgage",
          "PrePaidCard",
          "Savings",
          "Wallet"
        ],
        "type": "string",
        "description": "Specifies the sub type of account (product family group)."
      },
      "OBExternalAccountSubType1CodeV4": {
        "enum": [
          "CACC",
          "CARD",
          "CASH",
          "CHAR",
          "CISH",
          "COMM",
          "CPAC",
          "LLSV",
          "LOAN",
          "MGLD",
          "MOMA",
          "NREX",
          "ODFT",
          "ONDP",
          "OTHR",
          "SACC",
          "SLRY",
          "SVGS",
          "TAXE",
          "TRAN",
          "TRAS",
          "VACC",
          "NFCA",
          "MORT",
          "WALT"
        ],
        "type": "string",
        "description": "Specifies the sub type of account (product family group) <br /> For a full list of enumeration values refer to `OBExternalCashAccountType1Code` *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "OBExternalMandateClassification1Code": {
        "enum": [
          "FIXE",
          "USGB",
          "VARI"
        ],
        "type": "string",
        "description": "Type of mandate instruction. For a full list of values see `OBExternalClassification1Code` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "OBExternalPurpose1Code": {
        "enum": [
          "BKDF",
          "BKFE",
          "BKFM",
          "BKIP",
          "BKPP",
          "CBLK",
          "CDCB",
          "CDCD",
          "CDCS",
          "CDDP",
          "CDOC",
          "CDQC",
          "ETUP",
          "FCOL",
          "MTUP",
          "ACCT",
          "CASH",
          "COLL",
          "CSDB",
          "DEPT",
          "INTC",
          "INTP",
          "LIMA",
          "NETT",
          "BFWD",
          "CCIR",
          "CCPC",
          "CCPM",
          "CCSM",
          "CRDS",
          "CRPR",
          "CRSP",
          "CRTL",
          "EQPT",
          "EQUS",
          "EXPT",
          "EXTD",
          "FIXI",
          "FWBC",
          "FWCC",
          "FWSB",
          "FWSC",
          "MARG",
          "MBSB",
          "MBSC",
          "MGCC",
          "MGSC",
          "OCCC",
          "OPBC",
          "OPCC",
          "OPSB",
          "OPSC",
          "OPTN",
          "OTCD",
          "REPO",
          "RPBC",
          "RPCC",
          "RPSB",
          "RPSC",
          "RVPO",
          "SBSC",
          "SCIE",
          "SCIR",
          "SCRP",
          "SHBC",
          "SHCC",
          "SHSL",
          "SLEB",
          "SLOA",
          "SWBC",
          "SWCC",
          "SWPT",
          "SWSB",
          "SWSC",
          "TBAS",
          "TBBC",
          "TBCC",
          "TRCP",
          "AGRT",
          "AREN",
          "BEXP",
          "BOCE",
          "COMC",
          "CPYR",
          "GDDS",
          "GDSV",
          "GSCB",
          "LICF",
          "MP2B",
          "POPE",
          "ROYA",
          "SCVE",
          "SERV",
          "SUBS",
          "SUPP",
          "TRAD",
          "CHAR",
          "COMT",
          "MP2P",
          "ECPG",
          "ECPR",
          "ECPU",
          "EPAY",
          "CLPR",
          "COMP",
          "DBTC",
          "GOVI",
          "HLRP",
          "HLST",
          "INPC",
          "INPR",
          "INSC",
          "INSU",
          "INTE",
          "LBRI",
          "LIFI",
          "LOAN",
          "LOAR",
          "PENO",
          "PPTI",
          "RELG",
          "RINP",
          "TRFD",
          "FORW",
          "FXNT",
          "ADMG",
          "ADVA",
          "BCDM",
          "BCFG",
          "BLDM",
          "BNET",
          "CBFF",
          "CBFR",
          "CCRD",
          "CDBL",
          "CFEE",
          "CGDD",
          "CORT",
          "COST",
          "CPKC",
          "DCRD",
          "DSMT",
          "DVPM",
          "EDUC",
          "FACT",
          "FAND",
          "FCPM",
          "FEES",
          "GIFT",
          "GOVT",
          "ICCP",
          "IDCP",
          "IHRP",
          "INSM",
          "IVPT",
          "MCDM",
          "MCFG",
          "MSVC",
          "NOWS",
          "OCDM",
          "OCFG",
          "OFEE",
          "OTHR",
          "PADD",
          "PTSP",
          "RCKE",
          "RCPT",
          "REBT",
          "REFU",
          "RENT",
          "REOD",
          "RIMB",
          "RPNT",
          "RRBN",
          "RRCT",
          "RRTP",
          "RVPM",
          "SLPI",
          "SPLT",
          "STDY",
          "TBAN",
          "TBIL",
          "TCSC",
          "TELI",
          "TMPG",
          "TPRI",
          "TPRP",
          "TRNC",
          "TRVC",
          "WEBI",
          "IPAY",
          "IPCA",
          "IPDO",
          "IPEA",
          "IPEC",
          "IPEW",
          "IPPS",
          "IPRT",
          "IPU2",
          "IPUW",
          "ANNI",
          "CAFI",
          "CFDI",
          "CMDT",
          "DERI",
          "DIVD",
          "FREX",
          "HEDG",
          "INVS",
          "PRME",
          "SAVG",
          "SECU",
          "SEPI",
          "TREA",
          "UNIT",
          "FNET",
          "FUTR",
          "ANTS",
          "CVCF",
          "DMEQ",
          "DNTS",
          "HLTC",
          "HLTI",
          "HSPC",
          "ICRF",
          "LTCF",
          "MAFC",
          "MARF",
          "MDCS",
          "VIEW",
          "CDEP",
          "SWFP",
          "SWPP",
          "SWRS",
          "SWUF",
          "ADCS",
          "AEMP",
          "ALLW",
          "ALMY",
          "BBSC",
          "BECH",
          "BENE",
          "BONU",
          "CCHD",
          "COMM",
          "CSLP",
          "GFRP",
          "GVEA",
          "GVEB",
          "GVEC",
          "GVED",
          "GWLT",
          "HREC",
          "PAYR",
          "PEFC",
          "PENS",
          "PRCP",
          "RHBS",
          "SALA",
          "SPSP",
          "SSBE",
          "LBIN",
          "LCOL",
          "LFEE",
          "LMEQ",
          "LMFI",
          "LMRK",
          "LREB",
          "LREV",
          "LSFL",
          "ESTX",
          "FWLV",
          "GSTX",
          "HSTX",
          "INTX",
          "NITX",
          "PTXP",
          "RDTX",
          "TAXS",
          "VATX",
          "WHLD",
          "TAXR",
          "B112",
          "BR12",
          "TLRF",
          "TLRR",
          "AIRB",
          "BUSB",
          "FERB",
          "RLWY",
          "TRPT",
          "CBTV",
          "ELEC",
          "ENRG",
          "GASB",
          "NWCH",
          "NWCM",
          "OTLC",
          "PHON",
          "UBIL",
          "WTER",
          "BOND",
          "CABD",
          "CAEQ",
          "CBCR",
          "DBCR",
          "DICL",
          "EQTS",
          "FLCR",
          "EFTC",
          "EFTD",
          "MOMA",
          "RAPI",
          "GAMB",
          "LOTT",
          "AMEX",
          "SASW",
          "AUCO",
          "PCOM",
          "PDEP",
          "PLDS",
          "PLRF",
          "GAFA",
          "GAHO",
          "CPEN",
          "DEPD",
          "RETL",
          "DEBT"
        ],
        "type": "string",
        "description": "For a full list of enumeration values refer to `ExternalPurpose1Code` in *ISO_External_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "OBFileFormat": {
        "enum": [
          "DPDF",
          "DXML",
          "SDSH",
          "WORD",
          "XSLT"
        ],
        "type": "string",
        "description": "For a full list of enumeration values refer to `ExternalDocumentFormat1Code` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_internal_CodeSets)"
      },
      "OBFrequency2": {
        "enum": [
          "YEAR",
          "DAIL",
          "INDA",
          "MNTH",
          "QURT",
          "MIAN",
          "TEND",
          "MOVE",
          "WEEK"
        ],
        "type": "string",
        "description": "For a full list of enumeration values refer to `OBFrequency2Code` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_internal_CodeSets)"
      },
      "OBFrequency6": {
        "required": [
          "Type"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "type": "string"
          },
          "CountPerPeriod": {
            "type": "integer",
            "description": "Number of instructions to be created and processed during the specified period. Specifies a frequency in terms of a count per period within a specified frequency type. Note: should not be used alongside `PointInTime`",
            "format": "int32",
            "nullable": true
          },
          "PointInTime": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Regularity with which credit transfer instructions are to be created and processed"
      },
      "OBInternalAccountStatus1Code": {
        "enum": [
          "Deleted",
          "Disabled",
          "Enabled",
          "Pending",
          "ProForma"
        ],
        "type": "string",
        "description": "Specifies the status of account resource in code form. <br />\r\n\r\nFor a full list of enumeration values refer to `OBInternalAccountStatus1Code` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "OBInternalAccountType1Code": {
        "enum": [
          "Business",
          "Personal"
        ],
        "type": "string",
        "description": "Specifies the type of account (personal or business). <br /> For a full list of enumeration values refer to 'OBInternalAccountType1Code' in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "OBInternalPartyType1Code": {
        "enum": [
          "Delegate",
          "Joint",
          "Sole"
        ],
        "type": "string",
        "description": "Party type, in a coded form. For a full list see `OBInternalPartyType1Code` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "OBInternalTransactionMutability1Code": {
        "enum": [
          "Mutable",
          "Immutable"
        ],
        "type": "string",
        "description": "Specifies the Mutability of the Transaction record. <br />\r\n\r\nFor a full list of enumeration values refer to `OBInternalTransactionMutability1Code` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "OBMandateRelatedInformation1": {
        "required": [
          "Frequency"
        ],
        "type": "object",
        "properties": {
          "MandateIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification, as assigned by the creditor, to unambiguously identify the mandate.",
            "nullable": true
          },
          "Classification": {
            "$ref": "#/components/schemas/OBExternalMandateClassification1Code"
          },
          "CategoryPurposeCode": {
            "$ref": "#/components/schemas/ExternalCategoryPurpose1Code"
          },
          "FirstPaymentDateTime": {
            "type": "string",
            "description": "The date on which the first payment for a recurrent credit transfer will be made.",
            "format": "date-time",
            "nullable": true
          },
          "RecurringPaymentDateTime": {
            "type": "string",
            "description": "The date on which the first recurring payment for a Standing Order schedule will be made. \r\n\r\nUsage: This must be populated only if the first recurring date is different to the first payment date. All dates in the JSON payloads are represented in ISO 8601 date-time format. \r\n\r\nAll date-time fields in responses must include the timezone. An example is below:\r\n\r\n2017-04-05T10:43:07+00:00",
            "format": "date-time",
            "nullable": true
          },
          "FinalPaymentDateTime": {
            "type": "string",
            "description": "The date on which the final payment for a recurrent credit transfer will be made.",
            "format": "date-time",
            "nullable": true
          },
          "Frequency": {
            "$ref": "#/components/schemas/OBFrequency6"
          },
          "Reason": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Reason for the setup of the credit transfer mandate.",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Provides further details of the mandate signed between the creditor and the debtor."
      },
      "OBMerchantDetails1": {
        "type": "object",
        "properties": {
          "MerchantName": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "description": "Name by which the merchant is known.",
            "nullable": true
          },
          "MerchantCategoryCode": {
            "maxLength": 4,
            "minLength": 3,
            "type": "string",
            "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Details of the merchant involved in the transaction."
      },
      "OBParty2": {
        "required": [
          "PartyId"
        ],
        "type": "object",
        "properties": {
          "PartyId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "PartyNumber": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "PartyType": {
            "$ref": "#/components/schemas/OBInternalPartyType1Code"
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "FullLegalName": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "LegalStructure": {
            "type": "string",
            "nullable": true
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$",
            "type": "string",
            "nullable": true
          },
          "BeneficialOwnership": {
            "type": "boolean",
            "description": "A flag to indicate a party's beneficial ownership of the related account",
            "nullable": true
          },
          "AccountRole": {
            "type": "string",
            "nullable": true
          },
          "EmailAddress": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "pattern": "\\+[0-9]{1,3}-[0-9()+\\-]{1,30}",
            "type": "string",
            "nullable": true
          },
          "Mobile": {
            "pattern": "\\+[0-9]{1,3}-[0-9()+\\-]{1,30}",
            "type": "string",
            "nullable": true
          },
          "Relationships": {
            "$ref": "#/components/schemas/OBPartyRelationships1"
          },
          "Address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBPostalAddress7"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OBPartyRelationships1": {
        "type": "object",
        "properties": {
          "Account": {
            "$ref": "#/components/schemas/Account3"
          }
        },
        "additionalProperties": { },
        "description": "The Party's relationships with other resources."
      },
      "OBPostalAddress7": {
        "type": "object",
        "properties": {
          "AddressType": {
            "$ref": "#/components/schemas/OBAddressType2Code"
          },
          "Department": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "Identification of a division of a large organisation or building.",
            "nullable": true
          },
          "SubDepartment": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "Identification of a sub-division of a large organisation or building.",
            "nullable": true
          },
          "StreetName": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "BuildingNumber": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "BuildingName": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Floor": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "UnitNumber": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Room": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "PostBox": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "TownLocationName": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "DistrictName": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "CareOf": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "PostCode": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "TownName": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "CountrySubDivision": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Identifies a subdivision of a country such as state, region, county.",
            "nullable": true
          },
          "Country": {
            "pattern": "^[A-Z]{2,2}$",
            "type": "string",
            "description": "Nation with its own government.",
            "nullable": true
          },
          "AddressLine": {
            "maxItems": 7,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Information that locates and identifies a specific address, as defined by postal services."
      },
      "OBProxy1": {
        "required": [
          "Code",
          "Identification"
        ],
        "type": "object",
        "properties": {
          "Identification": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Identification used to indicate the account identification under another specified name."
          },
          "Code": {
            "$ref": "#/components/schemas/ExternalProxyAccountType1Code"
          },
          "Type": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Type of the proxy identification.",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Specifies an alternate assumed name for the identification of the account."
      },
      "OBReadAccount6": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadBalance1": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data2"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadConsent1": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data4"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk2"
          }
        },
        "additionalProperties": { }
      },
      "OBReadConsentResponse1": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data5"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk2"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadDataTransaction6": {
        "type": "object",
        "properties": {
          "Transaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBTransaction6"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OBReadDirectDebit2": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data6"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadParty2": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data8"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadParty3": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data9"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadStandingOrder6": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Data12"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReadTransaction6": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadDataTransaction6"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBReferredDocumentInformation": {
        "type": "object",
        "properties": {
          "Code": {
            "$ref": "#/components/schemas/ExternalDocumentType1Code"
          },
          "Issuer": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "dentification of the issuer of the reference document type.",
            "nullable": true
          },
          "Number": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Identification of the type specified for the referred document line.",
            "nullable": true
          },
          "RelatedDate": {
            "type": "string",
            "description": "Date associated with the referred document line.",
            "format": "date-time",
            "nullable": true
          },
          "LineDetails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Set of elements used to provide the content of the referred document line.",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "OBRemittanceInformation2": {
        "type": "object",
        "properties": {
          "Structured": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBRemittanceInformationStructured"
            },
            "nullable": true
          },
          "Unstructured": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system"
      },
      "OBRemittanceInformationStructured": {
        "type": "object",
        "properties": {
          "ReferredDocumentInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBReferredDocumentInformation"
            },
            "nullable": true
          },
          "ReferredDocumentAmount": {
            "type": "integer",
            "description": "Provides details on the amounts of the referred document.",
            "format": "int32",
            "nullable": true
          },
          "CreditorReferenceInformation": {
            "$ref": "#/components/schemas/CreditorReferenceInformation"
          },
          "Invoicer": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Invoicee": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "TaxRemittance": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Provides remittance information about a payment made for tax-related purposes.",
            "nullable": true
          },
          "AdditionalRemittanceInformation": {
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional information, in free text form, to complement the structured remittance information.",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "OBRisk2": {
        "type": "object",
        "additionalProperties": false,
        "description": "The Risk section is sent by the initiating party to the ASPSP. <br />\r\n\r\nIt is used to specify additional details for risk scoring for Account Info."
      },
      "OBStandingOrder6": {
        "required": [
          "AccountId"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "StandingOrderId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "NextPaymentDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastPaymentDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "NumberOfPayments": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "StandingOrderStatusCode": {
            "$ref": "#/components/schemas/ExternalMandateStatus1Code"
          },
          "FirstPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_2"
          },
          "NextPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_3"
          },
          "LastPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_11"
          },
          "FinalPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_4"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification5_1"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccount5_1"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          },
          "MandateRelatedInformation": {
            "$ref": "#/components/schemas/OBMandateRelatedInformation1"
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBRemittanceInformation2"
          }
        },
        "additionalProperties": false
      },
      "OBStatusReason": {
        "type": "object",
        "properties": {
          "StatusReasonCode": {
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "description": "Specifies the status reason in a code form. \r\n\r\n For a full description see `OBExternalStatusReason1Code` [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)",
            "nullable": true
          },
          "StatusReasonDescription": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Description supporting the StatusReasonCode.",
            "nullable": true
          },
          "Path": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Recommended but optional reference to JSON path if relevant to the StatusReasonCode.",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "OBSupplementaryData1": {
        "type": "object",
        "additionalProperties": { },
        "description": "Additional information that can not be captured in the structured fields and/or any other specific block."
      },
      "OBTransaction6": {
        "required": [
          "AccountId",
          "Amount",
          "BookingDateTime",
          "CreditDebitIndicator",
          "Status"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "TransactionId": {
            "maxLength": 210,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "TransactionReference": {
            "maxLength": 210,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "StatementReference": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "CreditDebitIndicator": {
            "$ref": "#/components/schemas/OBCreditDebitCode_1"
          },
          "Status": {
            "$ref": "#/components/schemas/ExternalEntryStatus1Code"
          },
          "TransactionMutability": {
            "$ref": "#/components/schemas/OBInternalTransactionMutability1Code"
          },
          "BookingDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "ValueDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "TransactionInformation": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "AddressLine": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_9"
          },
          "ChargeAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_10"
          },
          "CurrencyExchange": {
            "$ref": "#/components/schemas/OBCurrencyExchange5"
          },
          "BankTransactionCode": {
            "$ref": "#/components/schemas/OBBankTransactionCodeStructure1"
          },
          "ProprietaryBankTransactionCode": {
            "$ref": "#/components/schemas/ProprietaryBankTransactionCodeStructure1"
          },
          "ExtendedProprietaryBankTransactionCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBExtendedProprietaryBankTransactionCode"
            },
            "nullable": true
          },
          "Balance": {
            "$ref": "#/components/schemas/OBTransactionCashBalance"
          },
          "MerchantDetails": {
            "$ref": "#/components/schemas/OBMerchantDetails1"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6_1"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccount6_0"
          },
          "DebtorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6_2"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/OBCashAccount6_1"
          },
          "CardInstrument": {
            "$ref": "#/components/schemas/OBTransactionCardInstrument1"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          },
          "CategoryPurposeCode": {
            "$ref": "#/components/schemas/ExternalCategoryPurpose1Code"
          },
          "PaymentPurposeCode": {
            "$ref": "#/components/schemas/OBExternalPurpose1Code"
          },
          "UltimateCreditor": {
            "$ref": "#/components/schemas/OBUltimateCreditor1"
          },
          "UltimateDebtor": {
            "$ref": "#/components/schemas/OBUltimateDebtor1"
          }
        },
        "additionalProperties": false,
        "description": "Provides further details on an entry in the report."
      },
      "OBTransactionCardInstrument1": {
        "type": "object",
        "properties": {
          "CardSchemeName": {
            "$ref": "#/components/schemas/OBTransactionCardInstrument1CardSchemeName"
          },
          "AuthorisationType": {
            "$ref": "#/components/schemas/OBTransactionCardInstrument1AuthorisationType"
          },
          "Name": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "Name of the cardholder using the card instrument.",
            "nullable": true
          },
          "Identification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "description": "Identification assigned by an institution to identify the card instrument used in the transaction. This identification is known by the account owner, and may be masked.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set of elements to describe the card instrument used in the transaction. <br />\r\n\r\nFor a full list of enumeration values refer to `OBInternalCardSchemeType1Code` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
      },
      "OBTransactionCardInstrument1AuthorisationType": {
        "enum": [
          "ConsumerDevice",
          "Contactless",
          "None",
          "PIN"
        ],
        "type": "string"
      },
      "OBTransactionCardInstrument1CardSchemeName": {
        "enum": [
          "AmericanExpress",
          "Diners",
          "Discover",
          "MasterCard",
          "VISA"
        ],
        "type": "string"
      },
      "OBTransactionCashBalance": {
        "required": [
          "CreditDebitIndicator",
          "Type"
        ],
        "type": "object",
        "properties": {
          "CreditDebitIndicator": {
            "$ref": "#/components/schemas/OBCreditDebitCode_2"
          },
          "Type": {
            "$ref": "#/components/schemas/OBBalanceType1CodeV4"
          },
          "Amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "V3IsClearedBalanceType": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set of elements used to define the balance as a numerical representation of the net increases and decreases in an account after a transaction entry is applied to the account."
      },
      "OBUltimateCreditor1": {
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Name by which a party is known and which is usually used to identify that party.",
            "nullable": true
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Identification assigned by an institution.",
            "nullable": true
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$",
            "type": "string",
            "nullable": true
          },
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        },
        "additionalProperties": { },
        "description": "Ultimate party to which an amount of money is due."
      },
      "OBUltimateDebtor1": {
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Name by which a party is known and which is usually used to identify that party.",
            "nullable": true
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Identification assigned by an institution.",
            "nullable": true
          },
          "LEI": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$",
            "type": "string",
            "nullable": true
          },
          "SchemeName": {
            "type": "string",
            "nullable": true
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        },
        "additionalProperties": { },
        "description": "Ultimate party that owes an amount of money to the (ultimate) creditor."
      },
      "Parties2Response": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadParty3"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Parties read requests"
      },
      "PartiesResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadParty2"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Party read requests"
      },
      "Permissions": {
        "enum": [
          "ReadAccountsBasic",
          "ReadAccountsDetail",
          "ReadBalances",
          "ReadBeneficiariesBasic",
          "ReadBeneficiariesDetail",
          "ReadDirectDebits",
          "ReadOffers",
          "ReadPAN",
          "ReadParty",
          "ReadPartyPSU",
          "ReadProducts",
          "ReadScheduledPaymentsBasic",
          "ReadScheduledPaymentsDetail",
          "ReadStandingOrdersBasic",
          "ReadStandingOrdersDetail",
          "ReadStatementsBasic",
          "ReadStatementsDetail",
          "ReadTransactionsBasic",
          "ReadTransactionsCredits",
          "ReadTransactionsDebits",
          "ReadTransactionsDetail"
        ],
        "type": "string",
        "description": "Specifies the Open Banking account access data types. <br /> This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP. <br /> For a full list of enumeration values refer to `OBInternalPermissions1Code` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_internal_CodeSets)"
      },
      "Permissions2": {
        "enum": [
          "ReadAccountsBasic",
          "ReadAccountsDetail",
          "ReadBalances",
          "ReadBeneficiariesBasic",
          "ReadBeneficiariesDetail",
          "ReadDirectDebits",
          "ReadOffers",
          "ReadPAN",
          "ReadParty",
          "ReadPartyPSU",
          "ReadProducts",
          "ReadScheduledPaymentsBasic",
          "ReadScheduledPaymentsDetail",
          "ReadStandingOrdersBasic",
          "ReadStandingOrdersDetail",
          "ReadStatementsBasic",
          "ReadStatementsDetail",
          "ReadTransactionsBasic",
          "ReadTransactionsCredits",
          "ReadTransactionsDebits",
          "ReadTransactionsDetail"
        ],
        "type": "string",
        "description": "Specifies the Open Banking account access data types. <br /> This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP. <br /> For a full list of enumeration values refer to `OBInternalPermissions1Code` in *OB_Internal_CodeSet* [here](https://github.com/OpenBankingUK/External_internal_CodeSets)"
      },
      "ProprietaryBankTransactionCodeStructure1": {
        "required": [
          "Code"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Proprietary bank transaction code to identify the underlying transaction."
          },
          "Issuer": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Identification of the issuer of the proprietary bank transaction code.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Set of elements to fully identify a proprietary bank transaction code."
      },
      "ReadMonzoPot": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/MonzoPotData"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "StandingOrdersResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadStandingOrder6"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Standing Order read requests"
      },
      "StatementFrequencyAndFormatInner": {
        "type": "object",
        "properties": {
          "Frequency": {
            "$ref": "#/components/schemas/OBFrequency2"
          },
          "CommunicationMethod": {
            "$ref": "#/components/schemas/OBCommunicationMethod"
          },
          "Format": {
            "$ref": "#/components/schemas/OBFileFormat"
          },
          "DeliveryAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        },
        "additionalProperties": { },
        "description": "Frequency and format of statments for an account"
      },
      "TotalValue4": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
            "type": "string"
          },
          "Currency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string"
          }
        },
        "additionalProperties": { }
      },
      "TransactionsResponse": {
        "required": [
          "ExternalApiResponse",
          "ExternalApiResponseInfo"
        ],
        "type": "object",
        "properties": {
          "ExternalApiResponse": {
            "$ref": "#/components/schemas/OBReadTransaction6"
          },
          "ExternalApiResponseInfo": {
            "$ref": "#/components/schemas/ExternalApiResponseInfo"
          },
          "Warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of warning messages from Open Banking Connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to Transaction read requests"
      }
    }
  }
}