// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using System;
using FinnovationLabs.OpenBanking.Library.Connector.ApiModels.Base.Json;

namespace FinnovationLabs.OpenBanking.Library.Connector.OpenBankingUk.DynamicClientRegistration.V3p2.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class OBRegistrationProperties1
    {
        /// <summary>
        /// Initializes a new instance of the OBRegistrationProperties1 class.
        /// </summary>
        public OBRegistrationProperties1()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OBRegistrationProperties1 class.
        /// </summary>
        /// <param name="tokenEndpointAuthMethod">Possible values include:
        /// 'private_key_jwt', 'client_secret_jwt', 'client_secret_basic',
        /// 'client_secret_post', 'tls_client_auth'</param>
        /// <param name="applicationType">Possible values include: 'web',
        /// 'mobile'</param>
        /// <param name="idTokenSignedResponseAlg">Possible values include:
        /// 'RS256', 'PS256', 'ES256'</param>
        /// <param name="requestObjectSigningAlg">Possible values include:
        /// 'RS256', 'PS256', 'ES256'</param>
        /// <param name="clientId">OAuth 2.0 client identifier string</param>
        /// <param name="clientSecret">OAuth 2.0 client secret string</param>
        /// <param name="clientIdIssuedAt">Time at which the client identifier
        /// was issued expressed as seconds since 1970-01-01T00:00:00Z as
        /// measured in UTC</param>
        /// <param name="clientSecretExpiresAt">Time at which the client secret
        /// will expire expressed as seconds since 1970-01-01T00:00:00Z as
        /// measured in UTC. Set to 0 if does not expire</param>
        /// <param name="tokenEndpointAuthSigningAlg">Possible values include:
        /// 'RS256', 'PS256', 'ES256'</param>
        public OBRegistrationProperties1(IList<string> redirectUris, OBRegistrationProperties1tokenEndpointAuthMethodEnum tokenEndpointAuthMethod, IList<OBRegistrationProperties1grantTypesItemEnum> grantTypes, string scope, string softwareStatement, OBRegistrationProperties1applicationTypeEnum applicationType, SupportedAlgorithmsEnum idTokenSignedResponseAlg, SupportedAlgorithmsEnum requestObjectSigningAlg, string clientId = default(string), string clientSecret = default(string), DateTimeOffset? clientIdIssuedAt = default(DateTimeOffset?), DateTimeOffset? clientSecretExpiresAt = default(DateTimeOffset?), IList<OBRegistrationProperties1responseTypesItemEnum> responseTypes = default(IList<OBRegistrationProperties1responseTypesItemEnum>), string softwareId = default(string), SupportedAlgorithmsEnum? tokenEndpointAuthSigningAlg = default(SupportedAlgorithmsEnum?), string tlsClientAuthSubjectDn = default(string))
        {
            ClientId = clientId;
            ClientSecret = clientSecret;
            ClientIdIssuedAt = clientIdIssuedAt;
            ClientSecretExpiresAt = clientSecretExpiresAt;
            RedirectUris = redirectUris;
            TokenEndpointAuthMethod = tokenEndpointAuthMethod;
            GrantTypes = grantTypes;
            ResponseTypes = responseTypes;
            SoftwareId = softwareId;
            Scope = scope;
            SoftwareStatement = softwareStatement;
            ApplicationType = applicationType;
            IdTokenSignedResponseAlg = idTokenSignedResponseAlg;
            RequestObjectSigningAlg = requestObjectSigningAlg;
            TokenEndpointAuthSigningAlg = tokenEndpointAuthSigningAlg;
            TlsClientAuthSubjectDn = tlsClientAuthSubjectDn;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets oAuth 2.0 client identifier string
        /// </summary>
        [JsonProperty(PropertyName = "client_id")]
        public string ClientId { get; set; }

        /// <summary>
        /// Gets or sets oAuth 2.0 client secret string
        /// </summary>
        [JsonProperty(PropertyName = "client_secret")]
        public string ClientSecret { get; set; }

        /// <summary>
        /// Gets or sets time at which the client identifier was issued
        /// expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC
        /// </summary>
        [JsonProperty(PropertyName = "client_id_issued_at")]
        [JsonConverter(
            converterType: typeof(DateTimeOffsetNullableUnixConverter),
            DateTimeOffsetUnixConverterOptions.MilliSecondsNotSeconds)]
        public DateTimeOffset? ClientIdIssuedAt { get; set; }

        /// <summary>
        /// Gets or sets time at which the client secret will expire expressed
        /// as seconds since 1970-01-01T00:00:00Z as measured in UTC. Set to 0
        /// if does not expire
        /// </summary>
        [JsonProperty(PropertyName = "client_secret_expires_at")]
        [JsonConverter(typeof(DateTimeOffsetNullableUnixConverter))]
        public DateTimeOffset? ClientSecretExpiresAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "redirect_uris")]
        public IList<string> RedirectUris { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'private_key_jwt',
        /// 'client_secret_jwt', 'client_secret_basic', 'client_secret_post',
        /// 'tls_client_auth'
        /// </summary>
        [JsonProperty(PropertyName = "token_endpoint_auth_method")]
        public OBRegistrationProperties1tokenEndpointAuthMethodEnum TokenEndpointAuthMethod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "grant_types")]
        public IList<OBRegistrationProperties1grantTypesItemEnum> GrantTypes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "response_types")]
        public IList<OBRegistrationProperties1responseTypesItemEnum> ResponseTypes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "software_id")]
        public string SoftwareId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "scope")]
        [JsonConverter(
            converterType: typeof(DelimitedStringNullableConverter),
            DelimitedStringConverterOptions.JsonStringArrayNotString)]
        public string Scope { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "software_statement")]
        public string SoftwareStatement { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'web', 'mobile'
        /// </summary>
        [JsonProperty(PropertyName = "application_type")]
        public OBRegistrationProperties1applicationTypeEnum ApplicationType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'RS256', 'PS256', 'ES256'
        /// </summary>
        [JsonProperty(PropertyName = "id_token_signed_response_alg")]
        public SupportedAlgorithmsEnum IdTokenSignedResponseAlg { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'RS256', 'PS256', 'ES256'
        /// </summary>
        [JsonProperty(PropertyName = "request_object_signing_alg")]
        public SupportedAlgorithmsEnum RequestObjectSigningAlg { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'RS256', 'PS256', 'ES256'
        /// </summary>
        [JsonProperty(PropertyName = "token_endpoint_auth_signing_alg")]
        public SupportedAlgorithmsEnum? TokenEndpointAuthSigningAlg { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tls_client_auth_subject_dn")]
        public string TlsClientAuthSubjectDn { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RedirectUris == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RedirectUris");
            }
            if (GrantTypes == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "GrantTypes");
            }
            if (Scope == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Scope");
            }
            if (SoftwareStatement == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SoftwareStatement");
            }
        }
    }
}
