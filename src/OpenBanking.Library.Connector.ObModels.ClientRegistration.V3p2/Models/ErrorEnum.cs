// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace FinnovationLabs.OpenBanking.Library.Connector.ObModels.ClientRegistration.V3p2.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ErrorEnum.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ErrorEnum
    {
        [EnumMember(Value = "invalid_redirect_uri")]
        InvalidRedirectUri,
        [EnumMember(Value = "invalid_client_metadata")]
        InvalidClientMetadata,
        [EnumMember(Value = "invalid_software_statement")]
        InvalidSoftwareStatement,
        [EnumMember(Value = "unapproved_software_statement")]
        UnapprovedSoftwareStatement
    }
    internal static class ErrorEnumEnumExtension
    {
        internal static string ToSerializedValue(this ErrorEnum? value)
        {
            return value == null ? null : ((ErrorEnum)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ErrorEnum value)
        {
            switch( value )
            {
                case ErrorEnum.InvalidRedirectUri:
                    return "invalid_redirect_uri";
                case ErrorEnum.InvalidClientMetadata:
                    return "invalid_client_metadata";
                case ErrorEnum.InvalidSoftwareStatement:
                    return "invalid_software_statement";
                case ErrorEnum.UnapprovedSoftwareStatement:
                    return "unapproved_software_statement";
            }
            return null;
        }

        internal static ErrorEnum? ParseErrorEnum(this string value)
        {
            switch( value )
            {
                case "invalid_redirect_uri":
                    return ErrorEnum.InvalidRedirectUri;
                case "invalid_client_metadata":
                    return ErrorEnum.InvalidClientMetadata;
                case "invalid_software_statement":
                    return ErrorEnum.InvalidSoftwareStatement;
                case "unapproved_software_statement":
                    return ErrorEnum.UnapprovedSoftwareStatement;
            }
            return null;
        }
    }
}
